"use strict";
/*
 *                       ######
 *                       ######
 * ############    ####( ######  #####. ######  ############   ############
 * #############  #####( ######  #####. ######  #############  #############
 *        ######  #####( ######  #####. ######  #####  ######  #####  ######
 * ###### ######  #####( ######  #####. ######  #####  #####   #####  ######
 * ###### ######  #####( ######  #####. ######  #####          #####  ######
 * #############  #############  #############  #############  #####  ######
 *  ############   ############  #############   ############  #####  ######
 *                                      ######
 *                               #############
 *                               ############
 * Adyen NodeJS API Library
 * Copyright (c) 2021 Adyen B.V.
 * This file is open source and available under the MIT license.
 * See the LICENSE file for more info.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentSetupRequest = void 0;
class PaymentSetupRequest {
    static getAttributeTypeMap() {
        return PaymentSetupRequest.attributeTypeMap;
    }
}
exports.PaymentSetupRequest = PaymentSetupRequest;
PaymentSetupRequest.discriminator = undefined;
PaymentSetupRequest.attributeTypeMap = [
    {
        "name": "additionalData",
        "baseName": "additionalData",
        "type": "{ [key: string]: string; }"
    },
    {
        "name": "allowedPaymentMethods",
        "baseName": "allowedPaymentMethods",
        "type": "Array<string>"
    },
    {
        "name": "amount",
        "baseName": "amount",
        "type": "Amount"
    },
    {
        "name": "applicationInfo",
        "baseName": "applicationInfo",
        "type": "ApplicationInfo"
    },
    {
        "name": "billingAddress",
        "baseName": "billingAddress",
        "type": "Address"
    },
    {
        "name": "blockedPaymentMethods",
        "baseName": "blockedPaymentMethods",
        "type": "Array<string>"
    },
    {
        "name": "captureDelayHours",
        "baseName": "captureDelayHours",
        "type": "number"
    },
    {
        "name": "channel",
        "baseName": "channel",
        "type": "PaymentSetupRequest.ChannelEnum"
    },
    {
        "name": "company",
        "baseName": "company",
        "type": "Company"
    },
    {
        "name": "configuration",
        "baseName": "configuration",
        "type": "Configuration"
    },
    {
        "name": "conversionId",
        "baseName": "conversionId",
        "type": "string"
    },
    {
        "name": "countryCode",
        "baseName": "countryCode",
        "type": "string"
    },
    {
        "name": "dateOfBirth",
        "baseName": "dateOfBirth",
        "type": "Date"
    },
    {
        "name": "dccQuote",
        "baseName": "dccQuote",
        "type": "ForexQuote"
    },
    {
        "name": "deliveryAddress",
        "baseName": "deliveryAddress",
        "type": "Address"
    },
    {
        "name": "deliveryDate",
        "baseName": "deliveryDate",
        "type": "Date"
    },
    {
        "name": "enableOneClick",
        "baseName": "enableOneClick",
        "type": "boolean"
    },
    {
        "name": "enablePayOut",
        "baseName": "enablePayOut",
        "type": "boolean"
    },
    {
        "name": "enableRecurring",
        "baseName": "enableRecurring",
        "type": "boolean"
    },
    {
        "name": "entityType",
        "baseName": "entityType",
        "type": "PaymentSetupRequest.EntityTypeEnum"
    },
    {
        "name": "fraudOffset",
        "baseName": "fraudOffset",
        "type": "number"
    },
    {
        "name": "installments",
        "baseName": "installments",
        "type": "Installments"
    },
    {
        "name": "lineItems",
        "baseName": "lineItems",
        "type": "Array<LineItem>"
    },
    {
        "name": "mandate",
        "baseName": "mandate",
        "type": "Mandate"
    },
    {
        "name": "mcc",
        "baseName": "mcc",
        "type": "string"
    },
    {
        "name": "merchantAccount",
        "baseName": "merchantAccount",
        "type": "string"
    },
    {
        "name": "merchantOrderReference",
        "baseName": "merchantOrderReference",
        "type": "string"
    },
    {
        "name": "metadata",
        "baseName": "metadata",
        "type": "{ [key: string]: string; }"
    },
    {
        "name": "orderReference",
        "baseName": "orderReference",
        "type": "string"
    },
    {
        "name": "origin",
        "baseName": "origin",
        "type": "string"
    },
    {
        "name": "recurringExpiry",
        "baseName": "recurringExpiry",
        "type": "string"
    },
    {
        "name": "recurringFrequency",
        "baseName": "recurringFrequency",
        "type": "string"
    },
    {
        "name": "reference",
        "baseName": "reference",
        "type": "string"
    },
    {
        "name": "returnUrl",
        "baseName": "returnUrl",
        "type": "string"
    },
    {
        "name": "riskData",
        "baseName": "riskData",
        "type": "RiskData"
    },
    {
        "name": "sdkVersion",
        "baseName": "sdkVersion",
        "type": "string"
    },
    {
        "name": "sessionValidity",
        "baseName": "sessionValidity",
        "type": "string"
    },
    {
        "name": "shopperEmail",
        "baseName": "shopperEmail",
        "type": "string"
    },
    {
        "name": "shopperIP",
        "baseName": "shopperIP",
        "type": "string"
    },
    {
        "name": "shopperInteraction",
        "baseName": "shopperInteraction",
        "type": "PaymentSetupRequest.ShopperInteractionEnum"
    },
    {
        "name": "shopperLocale",
        "baseName": "shopperLocale",
        "type": "string"
    },
    {
        "name": "shopperName",
        "baseName": "shopperName",
        "type": "Name"
    },
    {
        "name": "shopperReference",
        "baseName": "shopperReference",
        "type": "string"
    },
    {
        "name": "shopperStatement",
        "baseName": "shopperStatement",
        "type": "string"
    },
    {
        "name": "socialSecurityNumber",
        "baseName": "socialSecurityNumber",
        "type": "string"
    },
    {
        "name": "splits",
        "baseName": "splits",
        "type": "Array<Split>"
    },
    {
        "name": "store",
        "baseName": "store",
        "type": "string"
    },
    {
        "name": "storePaymentMethod",
        "baseName": "storePaymentMethod",
        "type": "boolean"
    },
    {
        "name": "telephoneNumber",
        "baseName": "telephoneNumber",
        "type": "string"
    },
    {
        "name": "threeDSAuthenticationOnly",
        "baseName": "threeDSAuthenticationOnly",
        "type": "boolean"
    },
    {
        "name": "token",
        "baseName": "token",
        "type": "string"
    },
    {
        "name": "trustedShopper",
        "baseName": "trustedShopper",
        "type": "boolean"
    }
];
(function (PaymentSetupRequest) {
    let ChannelEnum;
    (function (ChannelEnum) {
        ChannelEnum[ChannelEnum["IOs"] = 'iOS'] = "IOs";
        ChannelEnum[ChannelEnum["Android"] = 'Android'] = "Android";
        ChannelEnum[ChannelEnum["Web"] = 'Web'] = "Web";
    })(ChannelEnum = PaymentSetupRequest.ChannelEnum || (PaymentSetupRequest.ChannelEnum = {}));
    let EntityTypeEnum;
    (function (EntityTypeEnum) {
        EntityTypeEnum[EntityTypeEnum["NaturalPerson"] = 'NaturalPerson'] = "NaturalPerson";
        EntityTypeEnum[EntityTypeEnum["CompanyName"] = 'CompanyName'] = "CompanyName";
    })(EntityTypeEnum = PaymentSetupRequest.EntityTypeEnum || (PaymentSetupRequest.EntityTypeEnum = {}));
    let ShopperInteractionEnum;
    (function (ShopperInteractionEnum) {
        ShopperInteractionEnum[ShopperInteractionEnum["Ecommerce"] = 'Ecommerce'] = "Ecommerce";
        ShopperInteractionEnum[ShopperInteractionEnum["ContAuth"] = 'ContAuth'] = "ContAuth";
        ShopperInteractionEnum[ShopperInteractionEnum["Moto"] = 'Moto'] = "Moto";
        ShopperInteractionEnum[ShopperInteractionEnum["Pos"] = 'POS'] = "Pos";
    })(ShopperInteractionEnum = PaymentSetupRequest.ShopperInteractionEnum || (PaymentSetupRequest.ShopperInteractionEnum = {}));
})(PaymentSetupRequest = exports.PaymentSetupRequest || (exports.PaymentSetupRequest = {}));
//# sourceMappingURL=paymentSetupRequest.js.map