"use strict";
/*
 *                       ######
 *                       ######
 * ############    ####( ######  #####. ######  ############   ############
 * #############  #####( ######  #####. ######  #############  #############
 *        ######  #####( ######  #####. ######  #####  ######  #####  ######
 * ###### ######  #####( ######  #####. ######  #####  #####   #####  ######
 * ###### ######  #####( ######  #####. ######  #####          #####  ######
 * #############  #############  #############  #############  #####  ######
 *  ############   ############  #############   ############  #####  ######
 *                                      ######
 *                               #############
 *                               ############
 * Adyen NodeJS API Library
 * Copyright (c) 2021 Adyen B.V.
 * This file is open source and available under the MIT license.
 * See the LICENSE file for more info.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentLinkResource = void 0;
class PaymentLinkResource {
    static getAttributeTypeMap() {
        return PaymentLinkResource.attributeTypeMap;
    }
}
exports.PaymentLinkResource = PaymentLinkResource;
PaymentLinkResource.discriminator = undefined;
PaymentLinkResource.attributeTypeMap = [
    {
        "name": "allowedPaymentMethods",
        "baseName": "allowedPaymentMethods",
        "type": "Array<string>"
    },
    {
        "name": "amount",
        "baseName": "amount",
        "type": "Amount"
    },
    {
        "name": "applicationInfo",
        "baseName": "applicationInfo",
        "type": "ApplicationInfo"
    },
    {
        "name": "billingAddress",
        "baseName": "billingAddress",
        "type": "Address"
    },
    {
        "name": "blockedPaymentMethods",
        "baseName": "blockedPaymentMethods",
        "type": "Array<string>"
    },
    {
        "name": "countryCode",
        "baseName": "countryCode",
        "type": "string"
    },
    {
        "name": "deliverAt",
        "baseName": "deliverAt",
        "type": "Date"
    },
    {
        "name": "deliveryAddress",
        "baseName": "deliveryAddress",
        "type": "Address"
    },
    {
        "name": "description",
        "baseName": "description",
        "type": "string"
    },
    {
        "name": "expiresAt",
        "baseName": "expiresAt",
        "type": "string"
    },
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "lineItems",
        "baseName": "lineItems",
        "type": "Array<LineItem>"
    },
    {
        "name": "merchantAccount",
        "baseName": "merchantAccount",
        "type": "string"
    },
    {
        "name": "merchantOrderReference",
        "baseName": "merchantOrderReference",
        "type": "string"
    },
    {
        "name": "recurringProcessingModel",
        "baseName": "recurringProcessingModel",
        "type": "PaymentLinkResource.RecurringProcessingModelEnum"
    },
    {
        "name": "reference",
        "baseName": "reference",
        "type": "string"
    },
    {
        "name": "returnUrl",
        "baseName": "returnUrl",
        "type": "string"
    },
    {
        "name": "reusable",
        "baseName": "reusable",
        "type": "boolean"
    },
    {
        "name": "riskData",
        "baseName": "riskData",
        "type": "RiskData"
    },
    {
        "name": "shopperEmail",
        "baseName": "shopperEmail",
        "type": "string"
    },
    {
        "name": "shopperLocale",
        "baseName": "shopperLocale",
        "type": "string"
    },
    {
        "name": "shopperName",
        "baseName": "shopperName",
        "type": "Name"
    },
    {
        "name": "shopperReference",
        "baseName": "shopperReference",
        "type": "string"
    },
    {
        "name": "splits",
        "baseName": "splits",
        "type": "Array<Split>"
    },
    {
        "name": "status",
        "baseName": "status",
        "type": "PaymentLinkResource.StatusEnum"
    },
    {
        "name": "store",
        "baseName": "store",
        "type": "string"
    },
    {
        "name": "storePaymentMethod",
        "baseName": "storePaymentMethod",
        "type": "boolean"
    },
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    }
];
(function (PaymentLinkResource) {
    let RecurringProcessingModelEnum;
    (function (RecurringProcessingModelEnum) {
        RecurringProcessingModelEnum[RecurringProcessingModelEnum["CardOnFile"] = 'CardOnFile'] = "CardOnFile";
        RecurringProcessingModelEnum[RecurringProcessingModelEnum["Subscription"] = 'Subscription'] = "Subscription";
        RecurringProcessingModelEnum[RecurringProcessingModelEnum["UnscheduledCardOnFile"] = 'UnscheduledCardOnFile'] = "UnscheduledCardOnFile";
    })(RecurringProcessingModelEnum = PaymentLinkResource.RecurringProcessingModelEnum || (PaymentLinkResource.RecurringProcessingModelEnum = {}));
    let StatusEnum;
    (function (StatusEnum) {
        StatusEnum[StatusEnum["Active"] = 'active'] = "Active";
        StatusEnum[StatusEnum["Completed"] = 'completed'] = "Completed";
        StatusEnum[StatusEnum["Expired"] = 'expired'] = "Expired";
        StatusEnum[StatusEnum["PaymentPending"] = 'paymentPending'] = "PaymentPending";
    })(StatusEnum = PaymentLinkResource.StatusEnum || (PaymentLinkResource.StatusEnum = {}));
})(PaymentLinkResource = exports.PaymentLinkResource || (exports.PaymentLinkResource = {}));
//# sourceMappingURL=paymentLinkResource.js.map