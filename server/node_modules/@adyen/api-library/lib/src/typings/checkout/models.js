"use strict";
/*
 *                       ######
 *                       ######
 * ############    ####( ######  #####. ######  ############   ############
 * #############  #####( ######  #####. ######  #############  #############
 *        ######  #####( ######  #####. ######  #####  ######  #####  ######
 * ###### ######  #####( ######  #####. ######  #####  #####   #####  ######
 * ###### ######  #####( ######  #####. ######  #####          #####  ######
 * #############  #############  #############  #############  #####  ######
 *  ############   ############  #############   ############  #####  ######
 *                                      ######
 *                               #############
 *                               ############
 * Adyen NodeJS API Library
 * Copyright (c) 2021 Adyen B.V.
 * This file is open source and available under the MIT license.
 * See the LICENSE file for more info.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ObjectSerializer = void 0;
/*
 *                       ######
 *                       ######
 * ############    ####( ######  #####. ######  ############   ############
 * #############  #####( ######  #####. ######  #############  #############
 *        ######  #####( ######  #####. ######  #####  ######  #####  ######
 * ###### ######  #####( ######  #####. ######  #####  #####   #####  ######
 * ###### ######  #####( ######  #####. ######  #####          #####  ######
 * #############  #############  #############  #############  #####  ######
 *  ############   ############  #############   ############  #####  ######
 *                                      ######
 *                               #############
 *                               ############
 * Adyen NodeJS API Library
 * Copyright (c) 2021 Adyen B.V.
 * This file is open source and available under the MIT license.
 * See the LICENSE file for more info.
 */
__exportStar(require("./accountInfo"), exports);
__exportStar(require("./achDetails"), exports);
__exportStar(require("./additionalData3DSecure"), exports);
__exportStar(require("./additionalDataAirline"), exports);
__exportStar(require("./additionalDataCarRental"), exports);
__exportStar(require("./additionalDataCommon"), exports);
__exportStar(require("./additionalDataLevel23"), exports);
__exportStar(require("./additionalDataLodging"), exports);
__exportStar(require("./additionalDataOpenInvoice"), exports);
__exportStar(require("./additionalDataOpi"), exports);
__exportStar(require("./additionalDataRatepay"), exports);
__exportStar(require("./additionalDataRetry"), exports);
__exportStar(require("./additionalDataRisk"), exports);
__exportStar(require("./additionalDataRiskStandalone"), exports);
__exportStar(require("./additionalDataSubMerchant"), exports);
__exportStar(require("./additionalDataTemporaryServices"), exports);
__exportStar(require("./additionalDataWallets"), exports);
__exportStar(require("./address"), exports);
__exportStar(require("./afterpayDetails"), exports);
__exportStar(require("./amazonPayDetails"), exports);
__exportStar(require("./amount"), exports);
__exportStar(require("./androidPayDetails"), exports);
__exportStar(require("./applePayDetails"), exports);
__exportStar(require("./applicationInfo"), exports);
__exportStar(require("./avs"), exports);
__exportStar(require("./bacsDirectDebitDetails"), exports);
__exportStar(require("./bankAccount"), exports);
__exportStar(require("./billDeskDetails"), exports);
__exportStar(require("./blikDetails"), exports);
__exportStar(require("./browserInfo"), exports);
__exportStar(require("./card"), exports);
__exportStar(require("./cardDetails"), exports);
__exportStar(require("./cellulantDetails"), exports);
__exportStar(require("./checkoutAwaitAction"), exports);
__exportStar(require("./checkoutBalanceCheckRequest"), exports);
__exportStar(require("./checkoutBalanceCheckResponse"), exports);
__exportStar(require("./checkoutBankTransferAction"), exports);
__exportStar(require("./checkoutCancelOrderRequest"), exports);
__exportStar(require("./checkoutCancelOrderResponse"), exports);
__exportStar(require("./checkoutCreateOrderRequest"), exports);
__exportStar(require("./checkoutCreateOrderResponse"), exports);
__exportStar(require("./checkoutDonationAction"), exports);
__exportStar(require("./checkoutOneTimePasscodeAction"), exports);
__exportStar(require("./checkoutOrder"), exports);
__exportStar(require("./checkoutOrderResponse"), exports);
__exportStar(require("./checkoutQrCodeAction"), exports);
__exportStar(require("./checkoutRedirectAction"), exports);
__exportStar(require("./checkoutSDKAction"), exports);
__exportStar(require("./checkoutThreeDS2Action"), exports);
__exportStar(require("./checkoutUtilityRequest"), exports);
__exportStar(require("./checkoutUtilityResponse"), exports);
__exportStar(require("./checkoutVoucherAction"), exports);
__exportStar(require("./commonField"), exports);
__exportStar(require("./company"), exports);
__exportStar(require("./configuration"), exports);
__exportStar(require("./createPaymentAmountUpdateRequest"), exports);
__exportStar(require("./createPaymentCancelRequest"), exports);
__exportStar(require("./createPaymentCaptureRequest"), exports);
__exportStar(require("./createPaymentLinkRequest"), exports);
__exportStar(require("./createPaymentRefundRequest"), exports);
__exportStar(require("./createPaymentReversalRequest"), exports);
__exportStar(require("./createStandalonePaymentCancelRequest"), exports);
__exportStar(require("./detailsRequest"), exports);
__exportStar(require("./deviceRenderOptions"), exports);
__exportStar(require("./dokuDetails"), exports);
__exportStar(require("./dotpayDetails"), exports);
__exportStar(require("./dragonpayDetails"), exports);
__exportStar(require("./econtextVoucherDetails"), exports);
__exportStar(require("./entercashDetails"), exports);
__exportStar(require("./externalPlatform"), exports);
__exportStar(require("./forexQuote"), exports);
__exportStar(require("./fraudCheckResult"), exports);
__exportStar(require("./fraudResult"), exports);
__exportStar(require("./genericIssuerPaymentMethodDetails"), exports);
__exportStar(require("./giropayDetails"), exports);
__exportStar(require("./googlePayDetails"), exports);
__exportStar(require("./idealDetails"), exports);
__exportStar(require("./inputDetail"), exports);
__exportStar(require("./installmentOption"), exports);
__exportStar(require("./installments"), exports);
__exportStar(require("./installmentsNumber"), exports);
__exportStar(require("./item"), exports);
__exportStar(require("./klarnaDetails"), exports);
__exportStar(require("./lianLianPayDetails"), exports);
__exportStar(require("./lineItem"), exports);
__exportStar(require("./mandate"), exports);
__exportStar(require("./masterpassDetails"), exports);
__exportStar(require("./mbwayDetails"), exports);
__exportStar(require("./merchantDevice"), exports);
__exportStar(require("./merchantRiskIndicator"), exports);
__exportStar(require("./mobilePayDetails"), exports);
__exportStar(require("./molPayDetails"), exports);
__exportStar(require("./name"), exports);
__exportStar(require("./openInvoiceDetails"), exports);
__exportStar(require("./payPalDetails"), exports);
__exportStar(require("./payUUpiDetails"), exports);
__exportStar(require("./payWithGoogleDetails"), exports);
__exportStar(require("./paymentAmountUpdateResource"), exports);
__exportStar(require("./paymentCancelResource"), exports);
__exportStar(require("./paymentCaptureResource"), exports);
__exportStar(require("./paymentCompletionDetails"), exports);
__exportStar(require("./paymentDetails"), exports);
__exportStar(require("./paymentDetailsResponse"), exports);
__exportStar(require("./paymentLinkResource"), exports);
__exportStar(require("./paymentMethod"), exports);
__exportStar(require("./paymentMethodGroup"), exports);
__exportStar(require("./paymentMethodsRequest"), exports);
__exportStar(require("./paymentMethodsResponse"), exports);
__exportStar(require("./paymentRefundResource"), exports);
__exportStar(require("./paymentRequest"), exports);
__exportStar(require("./paymentResponse"), exports);
__exportStar(require("./paymentReversalResource"), exports);
__exportStar(require("./paymentSetupRequest"), exports);
__exportStar(require("./paymentSetupResponse"), exports);
__exportStar(require("./paymentVerificationRequest"), exports);
__exportStar(require("./paymentVerificationResponse"), exports);
__exportStar(require("./qiwiWalletDetails"), exports);
__exportStar(require("./ratepayDetails"), exports);
__exportStar(require("./recurring"), exports);
__exportStar(require("./recurringDetail"), exports);
__exportStar(require("./redirect"), exports);
__exportStar(require("./responseAdditionalData3DSecure"), exports);
__exportStar(require("./responseAdditionalDataBillingAddress"), exports);
__exportStar(require("./responseAdditionalDataCard"), exports);
__exportStar(require("./responseAdditionalDataCommon"), exports);
__exportStar(require("./responseAdditionalDataDeliveryAddress"), exports);
__exportStar(require("./responseAdditionalDataInstallments"), exports);
__exportStar(require("./responseAdditionalDataNetworkTokens"), exports);
__exportStar(require("./responseAdditionalDataOpi"), exports);
__exportStar(require("./responseAdditionalDataPayPal"), exports);
__exportStar(require("./responseAdditionalDataSepa"), exports);
__exportStar(require("./riskData"), exports);
__exportStar(require("./sDKEphemPubKey"), exports);
__exportStar(require("./samsungPayDetails"), exports);
__exportStar(require("./sepaDirectDebitDetails"), exports);
__exportStar(require("./serviceError"), exports);
__exportStar(require("./serviceError2"), exports);
__exportStar(require("./shopperInput"), exports);
__exportStar(require("./shopperInteractionDevice"), exports);
__exportStar(require("./split"), exports);
__exportStar(require("./splitAmount"), exports);
__exportStar(require("./standalonePaymentCancelResource"), exports);
__exportStar(require("./storedDetails"), exports);
__exportStar(require("./storedPaymentMethod"), exports);
__exportStar(require("./storedPaymentMethodDetails"), exports);
__exportStar(require("./subInputDetail"), exports);
__exportStar(require("./threeDS2RequestData"), exports);
__exportStar(require("./threeDS2ResponseData"), exports);
__exportStar(require("./threeDS2Result"), exports);
__exportStar(require("./threeDSecureData"), exports);
__exportStar(require("./updatePaymentLinkRequest"), exports);
__exportStar(require("./upiDetails"), exports);
__exportStar(require("./vippsDetails"), exports);
__exportStar(require("./visaCheckoutDetails"), exports);
__exportStar(require("./weChatPayDetails"), exports);
__exportStar(require("./weChatPayMiniProgramDetails"), exports);
__exportStar(require("./zipDetails"), exports);
const accountInfo_1 = require("./accountInfo");
const achDetails_1 = require("./achDetails");
const additionalData3DSecure_1 = require("./additionalData3DSecure");
const additionalDataAirline_1 = require("./additionalDataAirline");
const additionalDataCarRental_1 = require("./additionalDataCarRental");
const additionalDataCommon_1 = require("./additionalDataCommon");
const additionalDataLevel23_1 = require("./additionalDataLevel23");
const additionalDataLodging_1 = require("./additionalDataLodging");
const additionalDataOpenInvoice_1 = require("./additionalDataOpenInvoice");
const additionalDataOpi_1 = require("./additionalDataOpi");
const additionalDataRatepay_1 = require("./additionalDataRatepay");
const additionalDataRetry_1 = require("./additionalDataRetry");
const additionalDataRisk_1 = require("./additionalDataRisk");
const additionalDataRiskStandalone_1 = require("./additionalDataRiskStandalone");
const additionalDataSubMerchant_1 = require("./additionalDataSubMerchant");
const additionalDataTemporaryServices_1 = require("./additionalDataTemporaryServices");
const additionalDataWallets_1 = require("./additionalDataWallets");
const address_1 = require("./address");
const afterpayDetails_1 = require("./afterpayDetails");
const amazonPayDetails_1 = require("./amazonPayDetails");
const amount_1 = require("./amount");
const androidPayDetails_1 = require("./androidPayDetails");
const applePayDetails_1 = require("./applePayDetails");
const applicationInfo_1 = require("./applicationInfo");
const avs_1 = require("./avs");
const bacsDirectDebitDetails_1 = require("./bacsDirectDebitDetails");
const bankAccount_1 = require("./bankAccount");
const billDeskDetails_1 = require("./billDeskDetails");
const blikDetails_1 = require("./blikDetails");
const browserInfo_1 = require("./browserInfo");
const card_1 = require("./card");
const cardDetails_1 = require("./cardDetails");
const cellulantDetails_1 = require("./cellulantDetails");
const checkoutAwaitAction_1 = require("./checkoutAwaitAction");
const checkoutBalanceCheckRequest_1 = require("./checkoutBalanceCheckRequest");
const checkoutBalanceCheckResponse_1 = require("./checkoutBalanceCheckResponse");
const checkoutBankTransferAction_1 = require("./checkoutBankTransferAction");
const checkoutCancelOrderRequest_1 = require("./checkoutCancelOrderRequest");
const checkoutCancelOrderResponse_1 = require("./checkoutCancelOrderResponse");
const checkoutCreateOrderRequest_1 = require("./checkoutCreateOrderRequest");
const checkoutCreateOrderResponse_1 = require("./checkoutCreateOrderResponse");
const checkoutDonationAction_1 = require("./checkoutDonationAction");
const checkoutOneTimePasscodeAction_1 = require("./checkoutOneTimePasscodeAction");
const checkoutOrder_1 = require("./checkoutOrder");
const checkoutOrderResponse_1 = require("./checkoutOrderResponse");
const checkoutQrCodeAction_1 = require("./checkoutQrCodeAction");
const checkoutRedirectAction_1 = require("./checkoutRedirectAction");
const checkoutSDKAction_1 = require("./checkoutSDKAction");
const checkoutThreeDS2Action_1 = require("./checkoutThreeDS2Action");
const checkoutUtilityRequest_1 = require("./checkoutUtilityRequest");
const checkoutUtilityResponse_1 = require("./checkoutUtilityResponse");
const checkoutVoucherAction_1 = require("./checkoutVoucherAction");
const commonField_1 = require("./commonField");
const company_1 = require("./company");
const configuration_1 = require("./configuration");
const createPaymentAmountUpdateRequest_1 = require("./createPaymentAmountUpdateRequest");
const createPaymentCancelRequest_1 = require("./createPaymentCancelRequest");
const createPaymentCaptureRequest_1 = require("./createPaymentCaptureRequest");
const createPaymentLinkRequest_1 = require("./createPaymentLinkRequest");
const createPaymentRefundRequest_1 = require("./createPaymentRefundRequest");
const createPaymentReversalRequest_1 = require("./createPaymentReversalRequest");
const createStandalonePaymentCancelRequest_1 = require("./createStandalonePaymentCancelRequest");
const detailsRequest_1 = require("./detailsRequest");
const deviceRenderOptions_1 = require("./deviceRenderOptions");
const dokuDetails_1 = require("./dokuDetails");
const dotpayDetails_1 = require("./dotpayDetails");
const dragonpayDetails_1 = require("./dragonpayDetails");
const econtextVoucherDetails_1 = require("./econtextVoucherDetails");
const entercashDetails_1 = require("./entercashDetails");
const externalPlatform_1 = require("./externalPlatform");
const forexQuote_1 = require("./forexQuote");
const fraudCheckResult_1 = require("./fraudCheckResult");
const fraudResult_1 = require("./fraudResult");
const genericIssuerPaymentMethodDetails_1 = require("./genericIssuerPaymentMethodDetails");
const giropayDetails_1 = require("./giropayDetails");
const googlePayDetails_1 = require("./googlePayDetails");
const idealDetails_1 = require("./idealDetails");
const inputDetail_1 = require("./inputDetail");
const installmentOption_1 = require("./installmentOption");
const installments_1 = require("./installments");
const installmentsNumber_1 = require("./installmentsNumber");
const item_1 = require("./item");
const klarnaDetails_1 = require("./klarnaDetails");
const lianLianPayDetails_1 = require("./lianLianPayDetails");
const lineItem_1 = require("./lineItem");
const mandate_1 = require("./mandate");
const masterpassDetails_1 = require("./masterpassDetails");
const mbwayDetails_1 = require("./mbwayDetails");
const merchantDevice_1 = require("./merchantDevice");
const merchantRiskIndicator_1 = require("./merchantRiskIndicator");
const mobilePayDetails_1 = require("./mobilePayDetails");
const molPayDetails_1 = require("./molPayDetails");
const name_1 = require("./name");
const openInvoiceDetails_1 = require("./openInvoiceDetails");
const payPalDetails_1 = require("./payPalDetails");
const payUUpiDetails_1 = require("./payUUpiDetails");
const payWithGoogleDetails_1 = require("./payWithGoogleDetails");
const paymentAmountUpdateResource_1 = require("./paymentAmountUpdateResource");
const paymentCancelResource_1 = require("./paymentCancelResource");
const paymentCaptureResource_1 = require("./paymentCaptureResource");
const paymentCompletionDetails_1 = require("./paymentCompletionDetails");
const paymentDetails_1 = require("./paymentDetails");
const paymentDetailsResponse_1 = require("./paymentDetailsResponse");
const paymentLinkResource_1 = require("./paymentLinkResource");
const paymentMethod_1 = require("./paymentMethod");
const paymentMethodGroup_1 = require("./paymentMethodGroup");
const paymentMethodsRequest_1 = require("./paymentMethodsRequest");
const paymentMethodsResponse_1 = require("./paymentMethodsResponse");
const paymentRefundResource_1 = require("./paymentRefundResource");
const paymentRequest_1 = require("./paymentRequest");
const paymentResponse_1 = require("./paymentResponse");
const paymentReversalResource_1 = require("./paymentReversalResource");
const paymentSetupRequest_1 = require("./paymentSetupRequest");
const paymentSetupResponse_1 = require("./paymentSetupResponse");
const paymentVerificationRequest_1 = require("./paymentVerificationRequest");
const paymentVerificationResponse_1 = require("./paymentVerificationResponse");
const qiwiWalletDetails_1 = require("./qiwiWalletDetails");
const ratepayDetails_1 = require("./ratepayDetails");
const recurring_1 = require("./recurring");
const recurringDetail_1 = require("./recurringDetail");
const redirect_1 = require("./redirect");
const responseAdditionalData3DSecure_1 = require("./responseAdditionalData3DSecure");
const responseAdditionalDataBillingAddress_1 = require("./responseAdditionalDataBillingAddress");
const responseAdditionalDataCard_1 = require("./responseAdditionalDataCard");
const responseAdditionalDataCommon_1 = require("./responseAdditionalDataCommon");
const responseAdditionalDataDeliveryAddress_1 = require("./responseAdditionalDataDeliveryAddress");
const responseAdditionalDataInstallments_1 = require("./responseAdditionalDataInstallments");
const responseAdditionalDataNetworkTokens_1 = require("./responseAdditionalDataNetworkTokens");
const responseAdditionalDataOpi_1 = require("./responseAdditionalDataOpi");
const responseAdditionalDataPayPal_1 = require("./responseAdditionalDataPayPal");
const responseAdditionalDataSepa_1 = require("./responseAdditionalDataSepa");
const riskData_1 = require("./riskData");
const sDKEphemPubKey_1 = require("./sDKEphemPubKey");
const samsungPayDetails_1 = require("./samsungPayDetails");
const sepaDirectDebitDetails_1 = require("./sepaDirectDebitDetails");
const serviceError_1 = require("./serviceError");
const serviceError2_1 = require("./serviceError2");
const shopperInput_1 = require("./shopperInput");
const shopperInteractionDevice_1 = require("./shopperInteractionDevice");
const split_1 = require("./split");
const splitAmount_1 = require("./splitAmount");
const standalonePaymentCancelResource_1 = require("./standalonePaymentCancelResource");
const storedDetails_1 = require("./storedDetails");
const storedPaymentMethod_1 = require("./storedPaymentMethod");
const storedPaymentMethodDetails_1 = require("./storedPaymentMethodDetails");
const subInputDetail_1 = require("./subInputDetail");
const threeDS2RequestData_1 = require("./threeDS2RequestData");
const threeDS2ResponseData_1 = require("./threeDS2ResponseData");
const threeDS2Result_1 = require("./threeDS2Result");
const threeDSecureData_1 = require("./threeDSecureData");
const updatePaymentLinkRequest_1 = require("./updatePaymentLinkRequest");
const upiDetails_1 = require("./upiDetails");
const vippsDetails_1 = require("./vippsDetails");
const visaCheckoutDetails_1 = require("./visaCheckoutDetails");
const weChatPayDetails_1 = require("./weChatPayDetails");
const weChatPayMiniProgramDetails_1 = require("./weChatPayMiniProgramDetails");
const zipDetails_1 = require("./zipDetails");
/* tslint:disable:no-unused-variable */
let primitives = [
    "string",
    "boolean",
    "double",
    "integer",
    "long",
    "float",
    "number",
    "any"
];
let enumsMap = {
    "AccountInfo.AccountAgeIndicatorEnum": accountInfo_1.AccountInfo.AccountAgeIndicatorEnum,
    "AccountInfo.AccountChangeIndicatorEnum": accountInfo_1.AccountInfo.AccountChangeIndicatorEnum,
    "AccountInfo.AccountTypeEnum": accountInfo_1.AccountInfo.AccountTypeEnum,
    "AccountInfo.DeliveryAddressUsageIndicatorEnum": accountInfo_1.AccountInfo.DeliveryAddressUsageIndicatorEnum,
    "AccountInfo.PasswordChangeIndicatorEnum": accountInfo_1.AccountInfo.PasswordChangeIndicatorEnum,
    "AccountInfo.PaymentAccountIndicatorEnum": accountInfo_1.AccountInfo.PaymentAccountIndicatorEnum,
    "AchDetails.TypeEnum": achDetails_1.AchDetails.TypeEnum,
    "AdditionalDataCommon.IndustryUsageEnum": additionalDataCommon_1.AdditionalDataCommon.IndustryUsageEnum,
    "AfterpayDetails.TypeEnum": afterpayDetails_1.AfterpayDetails.TypeEnum,
    "AmazonPayDetails.TypeEnum": amazonPayDetails_1.AmazonPayDetails.TypeEnum,
    "AndroidPayDetails.TypeEnum": androidPayDetails_1.AndroidPayDetails.TypeEnum,
    "ApplePayDetails.FundingSourceEnum": applePayDetails_1.ApplePayDetails.FundingSourceEnum,
    "ApplePayDetails.TypeEnum": applePayDetails_1.ApplePayDetails.TypeEnum,
    "Avs.EnabledEnum": avs_1.Avs.EnabledEnum,
    "BacsDirectDebitDetails.TypeEnum": bacsDirectDebitDetails_1.BacsDirectDebitDetails.TypeEnum,
    "BillDeskDetails.TypeEnum": billDeskDetails_1.BillDeskDetails.TypeEnum,
    "BlikDetails.TypeEnum": blikDetails_1.BlikDetails.TypeEnum,
    "CardDetails.FundingSourceEnum": cardDetails_1.CardDetails.FundingSourceEnum,
    "CardDetails.TypeEnum": cardDetails_1.CardDetails.TypeEnum,
    "CellulantDetails.TypeEnum": cellulantDetails_1.CellulantDetails.TypeEnum,
    "CheckoutAwaitAction.TypeEnum": checkoutAwaitAction_1.CheckoutAwaitAction.TypeEnum,
    "CheckoutBalanceCheckRequest.RecurringProcessingModelEnum": checkoutBalanceCheckRequest_1.CheckoutBalanceCheckRequest.RecurringProcessingModelEnum,
    "CheckoutBalanceCheckRequest.ShopperInteractionEnum": checkoutBalanceCheckRequest_1.CheckoutBalanceCheckRequest.ShopperInteractionEnum,
    "CheckoutBalanceCheckResponse.ResultCodeEnum": checkoutBalanceCheckResponse_1.CheckoutBalanceCheckResponse.ResultCodeEnum,
    "CheckoutBankTransferAction.TypeEnum": checkoutBankTransferAction_1.CheckoutBankTransferAction.TypeEnum,
    "CheckoutCancelOrderResponse.ResultCodeEnum": checkoutCancelOrderResponse_1.CheckoutCancelOrderResponse.ResultCodeEnum,
    "CheckoutCreateOrderResponse.ResultCodeEnum": checkoutCreateOrderResponse_1.CheckoutCreateOrderResponse.ResultCodeEnum,
    "CheckoutDonationAction.TypeEnum": checkoutDonationAction_1.CheckoutDonationAction.TypeEnum,
    "CheckoutOneTimePasscodeAction.TypeEnum": checkoutOneTimePasscodeAction_1.CheckoutOneTimePasscodeAction.TypeEnum,
    "CheckoutQrCodeAction.TypeEnum": checkoutQrCodeAction_1.CheckoutQrCodeAction.TypeEnum,
    "CheckoutRedirectAction.TypeEnum": checkoutRedirectAction_1.CheckoutRedirectAction.TypeEnum,
    "CheckoutSDKAction.TypeEnum": checkoutSDKAction_1.CheckoutSDKAction.TypeEnum,
    "CheckoutThreeDS2Action.TypeEnum": checkoutThreeDS2Action_1.CheckoutThreeDS2Action.TypeEnum,
    "CheckoutVoucherAction.TypeEnum": checkoutVoucherAction_1.CheckoutVoucherAction.TypeEnum,
    "Configuration.CardHolderNameEnum": configuration_1.Configuration.CardHolderNameEnum,
    "CreatePaymentAmountUpdateRequest.ReasonEnum": createPaymentAmountUpdateRequest_1.CreatePaymentAmountUpdateRequest.ReasonEnum,
    "CreatePaymentLinkRequest.RecurringProcessingModelEnum": createPaymentLinkRequest_1.CreatePaymentLinkRequest.RecurringProcessingModelEnum,
    "CreatePaymentLinkRequest.RequiredShopperFieldsEnum": createPaymentLinkRequest_1.CreatePaymentLinkRequest.RequiredShopperFieldsEnum,
    "DeviceRenderOptions.SdkInterfaceEnum": deviceRenderOptions_1.DeviceRenderOptions.SdkInterfaceEnum,
    "DeviceRenderOptions.SdkUiTypeEnum": deviceRenderOptions_1.DeviceRenderOptions.SdkUiTypeEnum,
    "DokuDetails.TypeEnum": dokuDetails_1.DokuDetails.TypeEnum,
    "DotpayDetails.TypeEnum": dotpayDetails_1.DotpayDetails.TypeEnum,
    "DragonpayDetails.TypeEnum": dragonpayDetails_1.DragonpayDetails.TypeEnum,
    "EcontextVoucherDetails.TypeEnum": econtextVoucherDetails_1.EcontextVoucherDetails.TypeEnum,
    "EntercashDetails.TypeEnum": entercashDetails_1.EntercashDetails.TypeEnum,
    "GenericIssuerPaymentMethodDetails.TypeEnum": genericIssuerPaymentMethodDetails_1.GenericIssuerPaymentMethodDetails.TypeEnum,
    "GiropayDetails.TypeEnum": giropayDetails_1.GiropayDetails.TypeEnum,
    "GooglePayDetails.FundingSourceEnum": googlePayDetails_1.GooglePayDetails.FundingSourceEnum,
    "GooglePayDetails.TypeEnum": googlePayDetails_1.GooglePayDetails.TypeEnum,
    "IdealDetails.TypeEnum": idealDetails_1.IdealDetails.TypeEnum,
    "InstallmentOption.PlansEnum": installmentOption_1.InstallmentOption.PlansEnum,
    "Installments.PlanEnum": installments_1.Installments.PlanEnum,
    "KlarnaDetails.TypeEnum": klarnaDetails_1.KlarnaDetails.TypeEnum,
    "LianLianPayDetails.TypeEnum": lianLianPayDetails_1.LianLianPayDetails.TypeEnum,
    "LineItem.TaxCategoryEnum": lineItem_1.LineItem.TaxCategoryEnum,
    "Mandate.AmountRuleEnum": mandate_1.Mandate.AmountRuleEnum,
    "Mandate.BillingAttemptsRuleEnum": mandate_1.Mandate.BillingAttemptsRuleEnum,
    "Mandate.FrequencyEnum": mandate_1.Mandate.FrequencyEnum,
    "MasterpassDetails.FundingSourceEnum": masterpassDetails_1.MasterpassDetails.FundingSourceEnum,
    "MasterpassDetails.TypeEnum": masterpassDetails_1.MasterpassDetails.TypeEnum,
    "MbwayDetails.TypeEnum": mbwayDetails_1.MbwayDetails.TypeEnum,
    "MerchantRiskIndicator.DeliveryAddressIndicatorEnum": merchantRiskIndicator_1.MerchantRiskIndicator.DeliveryAddressIndicatorEnum,
    "MerchantRiskIndicator.DeliveryTimeframeEnum": merchantRiskIndicator_1.MerchantRiskIndicator.DeliveryTimeframeEnum,
    "MobilePayDetails.TypeEnum": mobilePayDetails_1.MobilePayDetails.TypeEnum,
    "MolPayDetails.TypeEnum": molPayDetails_1.MolPayDetails.TypeEnum,
    "OpenInvoiceDetails.TypeEnum": openInvoiceDetails_1.OpenInvoiceDetails.TypeEnum,
    "PayPalDetails.SubtypeEnum": payPalDetails_1.PayPalDetails.SubtypeEnum,
    "PayPalDetails.TypeEnum": payPalDetails_1.PayPalDetails.TypeEnum,
    "PayUUpiDetails.TypeEnum": payUUpiDetails_1.PayUUpiDetails.TypeEnum,
    "PayWithGoogleDetails.FundingSourceEnum": payWithGoogleDetails_1.PayWithGoogleDetails.FundingSourceEnum,
    "PayWithGoogleDetails.TypeEnum": payWithGoogleDetails_1.PayWithGoogleDetails.TypeEnum,
    "PaymentAmountUpdateResource.ReasonEnum": paymentAmountUpdateResource_1.PaymentAmountUpdateResource.ReasonEnum,
    "PaymentAmountUpdateResource.StatusEnum": paymentAmountUpdateResource_1.PaymentAmountUpdateResource.StatusEnum,
    "PaymentCancelResource.StatusEnum": paymentCancelResource_1.PaymentCancelResource.StatusEnum,
    "PaymentCaptureResource.StatusEnum": paymentCaptureResource_1.PaymentCaptureResource.StatusEnum,
    "PaymentDetails.TypeEnum": paymentDetails_1.PaymentDetails.TypeEnum,
    "PaymentDetailsResponse.ResultCodeEnum": paymentDetailsResponse_1.PaymentDetailsResponse.ResultCodeEnum,
    "PaymentLinkResource.RecurringProcessingModelEnum": paymentLinkResource_1.PaymentLinkResource.RecurringProcessingModelEnum,
    "PaymentLinkResource.StatusEnum": paymentLinkResource_1.PaymentLinkResource.StatusEnum,
    "PaymentMethod.FundingSourceEnum": paymentMethod_1.PaymentMethod.FundingSourceEnum,
    "PaymentMethodsRequest.ChannelEnum": paymentMethodsRequest_1.PaymentMethodsRequest.ChannelEnum,
    "PaymentRefundResource.StatusEnum": paymentRefundResource_1.PaymentRefundResource.StatusEnum,
    "PaymentRequest.ChannelEnum": paymentRequest_1.PaymentRequest.ChannelEnum,
    "PaymentRequest.EntityTypeEnum": paymentRequest_1.PaymentRequest.EntityTypeEnum,
    "PaymentRequest.RecurringProcessingModelEnum": paymentRequest_1.PaymentRequest.RecurringProcessingModelEnum,
    "PaymentRequest.ShopperInteractionEnum": paymentRequest_1.PaymentRequest.ShopperInteractionEnum,
    "PaymentResponse.ResultCodeEnum": paymentResponse_1.PaymentResponse.ResultCodeEnum,
    "PaymentReversalResource.StatusEnum": paymentReversalResource_1.PaymentReversalResource.StatusEnum,
    "PaymentSetupRequest.ChannelEnum": paymentSetupRequest_1.PaymentSetupRequest.ChannelEnum,
    "PaymentSetupRequest.EntityTypeEnum": paymentSetupRequest_1.PaymentSetupRequest.EntityTypeEnum,
    "PaymentSetupRequest.ShopperInteractionEnum": paymentSetupRequest_1.PaymentSetupRequest.ShopperInteractionEnum,
    "PaymentVerificationResponse.ResultCodeEnum": paymentVerificationResponse_1.PaymentVerificationResponse.ResultCodeEnum,
    "QiwiWalletDetails.TypeEnum": qiwiWalletDetails_1.QiwiWalletDetails.TypeEnum,
    "RatepayDetails.TypeEnum": ratepayDetails_1.RatepayDetails.TypeEnum,
    "Recurring.ContractEnum": recurring_1.Recurring.ContractEnum,
    "Recurring.TokenServiceEnum": recurring_1.Recurring.TokenServiceEnum,
    "RecurringDetail.FundingSourceEnum": recurringDetail_1.RecurringDetail.FundingSourceEnum,
    "Redirect.MethodEnum": redirect_1.Redirect.MethodEnum,
    "ResponseAdditionalDataCommon.FraudResultTypeEnum": responseAdditionalDataCommon_1.ResponseAdditionalDataCommon.FraudResultTypeEnum,
    "ResponseAdditionalDataCommon.MerchantAdviceCodeEnum": responseAdditionalDataCommon_1.ResponseAdditionalDataCommon.MerchantAdviceCodeEnum,
    "ResponseAdditionalDataCommon.RecurringProcessingModelEnum": responseAdditionalDataCommon_1.ResponseAdditionalDataCommon.RecurringProcessingModelEnum,
    "SamsungPayDetails.FundingSourceEnum": samsungPayDetails_1.SamsungPayDetails.FundingSourceEnum,
    "SamsungPayDetails.TypeEnum": samsungPayDetails_1.SamsungPayDetails.TypeEnum,
    "SepaDirectDebitDetails.TypeEnum": sepaDirectDebitDetails_1.SepaDirectDebitDetails.TypeEnum,
    "ShopperInput.BillingAddressEnum": shopperInput_1.ShopperInput.BillingAddressEnum,
    "ShopperInput.DeliveryAddressEnum": shopperInput_1.ShopperInput.DeliveryAddressEnum,
    "ShopperInput.PersonalDetailsEnum": shopperInput_1.ShopperInput.PersonalDetailsEnum,
    "Split.TypeEnum": split_1.Split.TypeEnum,
    "StandalonePaymentCancelResource.StatusEnum": standalonePaymentCancelResource_1.StandalonePaymentCancelResource.StatusEnum,
    "StoredPaymentMethodDetails.TypeEnum": storedPaymentMethodDetails_1.StoredPaymentMethodDetails.TypeEnum,
    "ThreeDS2RequestData.ChallengeIndicatorEnum": threeDS2RequestData_1.ThreeDS2RequestData.ChallengeIndicatorEnum,
    "ThreeDS2RequestData.TransactionTypeEnum": threeDS2RequestData_1.ThreeDS2RequestData.TransactionTypeEnum,
    "ThreeDSecureData.AuthenticationResponseEnum": threeDSecureData_1.ThreeDSecureData.AuthenticationResponseEnum,
    "ThreeDSecureData.DirectoryResponseEnum": threeDSecureData_1.ThreeDSecureData.DirectoryResponseEnum,
    "UpdatePaymentLinkRequest.StatusEnum": updatePaymentLinkRequest_1.UpdatePaymentLinkRequest.StatusEnum,
    "UpiDetails.TypeEnum": upiDetails_1.UpiDetails.TypeEnum,
    "VippsDetails.TypeEnum": vippsDetails_1.VippsDetails.TypeEnum,
    "VisaCheckoutDetails.FundingSourceEnum": visaCheckoutDetails_1.VisaCheckoutDetails.FundingSourceEnum,
    "VisaCheckoutDetails.TypeEnum": visaCheckoutDetails_1.VisaCheckoutDetails.TypeEnum,
    "WeChatPayDetails.TypeEnum": weChatPayDetails_1.WeChatPayDetails.TypeEnum,
    "WeChatPayMiniProgramDetails.TypeEnum": weChatPayMiniProgramDetails_1.WeChatPayMiniProgramDetails.TypeEnum,
    "ZipDetails.TypeEnum": zipDetails_1.ZipDetails.TypeEnum,
};
let typeMap = {
    "AccountInfo": accountInfo_1.AccountInfo,
    "AchDetails": achDetails_1.AchDetails,
    "AdditionalData3DSecure": additionalData3DSecure_1.AdditionalData3DSecure,
    "AdditionalDataAirline": additionalDataAirline_1.AdditionalDataAirline,
    "AdditionalDataCarRental": additionalDataCarRental_1.AdditionalDataCarRental,
    "AdditionalDataCommon": additionalDataCommon_1.AdditionalDataCommon,
    "AdditionalDataLevel23": additionalDataLevel23_1.AdditionalDataLevel23,
    "AdditionalDataLodging": additionalDataLodging_1.AdditionalDataLodging,
    "AdditionalDataOpenInvoice": additionalDataOpenInvoice_1.AdditionalDataOpenInvoice,
    "AdditionalDataOpi": additionalDataOpi_1.AdditionalDataOpi,
    "AdditionalDataRatepay": additionalDataRatepay_1.AdditionalDataRatepay,
    "AdditionalDataRetry": additionalDataRetry_1.AdditionalDataRetry,
    "AdditionalDataRisk": additionalDataRisk_1.AdditionalDataRisk,
    "AdditionalDataRiskStandalone": additionalDataRiskStandalone_1.AdditionalDataRiskStandalone,
    "AdditionalDataSubMerchant": additionalDataSubMerchant_1.AdditionalDataSubMerchant,
    "AdditionalDataTemporaryServices": additionalDataTemporaryServices_1.AdditionalDataTemporaryServices,
    "AdditionalDataWallets": additionalDataWallets_1.AdditionalDataWallets,
    "Address": address_1.Address,
    "AfterpayDetails": afterpayDetails_1.AfterpayDetails,
    "AmazonPayDetails": amazonPayDetails_1.AmazonPayDetails,
    "Amount": amount_1.Amount,
    "AndroidPayDetails": androidPayDetails_1.AndroidPayDetails,
    "ApplePayDetails": applePayDetails_1.ApplePayDetails,
    "ApplicationInfo": applicationInfo_1.ApplicationInfo,
    "Avs": avs_1.Avs,
    "BacsDirectDebitDetails": bacsDirectDebitDetails_1.BacsDirectDebitDetails,
    "BankAccount": bankAccount_1.BankAccount,
    "BillDeskDetails": billDeskDetails_1.BillDeskDetails,
    "BlikDetails": blikDetails_1.BlikDetails,
    "BrowserInfo": browserInfo_1.BrowserInfo,
    "Card": card_1.Card,
    "CardDetails": cardDetails_1.CardDetails,
    "CellulantDetails": cellulantDetails_1.CellulantDetails,
    "CheckoutAwaitAction": checkoutAwaitAction_1.CheckoutAwaitAction,
    "CheckoutBalanceCheckRequest": checkoutBalanceCheckRequest_1.CheckoutBalanceCheckRequest,
    "CheckoutBalanceCheckResponse": checkoutBalanceCheckResponse_1.CheckoutBalanceCheckResponse,
    "CheckoutBankTransferAction": checkoutBankTransferAction_1.CheckoutBankTransferAction,
    "CheckoutCancelOrderRequest": checkoutCancelOrderRequest_1.CheckoutCancelOrderRequest,
    "CheckoutCancelOrderResponse": checkoutCancelOrderResponse_1.CheckoutCancelOrderResponse,
    "CheckoutCreateOrderRequest": checkoutCreateOrderRequest_1.CheckoutCreateOrderRequest,
    "CheckoutCreateOrderResponse": checkoutCreateOrderResponse_1.CheckoutCreateOrderResponse,
    "CheckoutDonationAction": checkoutDonationAction_1.CheckoutDonationAction,
    "CheckoutOneTimePasscodeAction": checkoutOneTimePasscodeAction_1.CheckoutOneTimePasscodeAction,
    "CheckoutOrder": checkoutOrder_1.CheckoutOrder,
    "CheckoutOrderResponse": checkoutOrderResponse_1.CheckoutOrderResponse,
    "CheckoutQrCodeAction": checkoutQrCodeAction_1.CheckoutQrCodeAction,
    "CheckoutRedirectAction": checkoutRedirectAction_1.CheckoutRedirectAction,
    "CheckoutSDKAction": checkoutSDKAction_1.CheckoutSDKAction,
    "CheckoutThreeDS2Action": checkoutThreeDS2Action_1.CheckoutThreeDS2Action,
    "CheckoutUtilityRequest": checkoutUtilityRequest_1.CheckoutUtilityRequest,
    "CheckoutUtilityResponse": checkoutUtilityResponse_1.CheckoutUtilityResponse,
    "CheckoutVoucherAction": checkoutVoucherAction_1.CheckoutVoucherAction,
    "CommonField": commonField_1.CommonField,
    "Company": company_1.Company,
    "Configuration": configuration_1.Configuration,
    "CreatePaymentAmountUpdateRequest": createPaymentAmountUpdateRequest_1.CreatePaymentAmountUpdateRequest,
    "CreatePaymentCancelRequest": createPaymentCancelRequest_1.CreatePaymentCancelRequest,
    "CreatePaymentCaptureRequest": createPaymentCaptureRequest_1.CreatePaymentCaptureRequest,
    "CreatePaymentLinkRequest": createPaymentLinkRequest_1.CreatePaymentLinkRequest,
    "CreatePaymentRefundRequest": createPaymentRefundRequest_1.CreatePaymentRefundRequest,
    "CreatePaymentReversalRequest": createPaymentReversalRequest_1.CreatePaymentReversalRequest,
    "CreateStandalonePaymentCancelRequest": createStandalonePaymentCancelRequest_1.CreateStandalonePaymentCancelRequest,
    "DetailsRequest": detailsRequest_1.DetailsRequest,
    "DeviceRenderOptions": deviceRenderOptions_1.DeviceRenderOptions,
    "DokuDetails": dokuDetails_1.DokuDetails,
    "DotpayDetails": dotpayDetails_1.DotpayDetails,
    "DragonpayDetails": dragonpayDetails_1.DragonpayDetails,
    "EcontextVoucherDetails": econtextVoucherDetails_1.EcontextVoucherDetails,
    "EntercashDetails": entercashDetails_1.EntercashDetails,
    "ExternalPlatform": externalPlatform_1.ExternalPlatform,
    "ForexQuote": forexQuote_1.ForexQuote,
    "FraudCheckResult": fraudCheckResult_1.FraudCheckResult,
    "FraudResult": fraudResult_1.FraudResult,
    "GenericIssuerPaymentMethodDetails": genericIssuerPaymentMethodDetails_1.GenericIssuerPaymentMethodDetails,
    "GiropayDetails": giropayDetails_1.GiropayDetails,
    "GooglePayDetails": googlePayDetails_1.GooglePayDetails,
    "IdealDetails": idealDetails_1.IdealDetails,
    "InputDetail": inputDetail_1.InputDetail,
    "InstallmentOption": installmentOption_1.InstallmentOption,
    "Installments": installments_1.Installments,
    "InstallmentsNumber": installmentsNumber_1.InstallmentsNumber,
    "Item": item_1.Item,
    "KlarnaDetails": klarnaDetails_1.KlarnaDetails,
    "LianLianPayDetails": lianLianPayDetails_1.LianLianPayDetails,
    "LineItem": lineItem_1.LineItem,
    "Mandate": mandate_1.Mandate,
    "MasterpassDetails": masterpassDetails_1.MasterpassDetails,
    "MbwayDetails": mbwayDetails_1.MbwayDetails,
    "MerchantDevice": merchantDevice_1.MerchantDevice,
    "MerchantRiskIndicator": merchantRiskIndicator_1.MerchantRiskIndicator,
    "MobilePayDetails": mobilePayDetails_1.MobilePayDetails,
    "MolPayDetails": molPayDetails_1.MolPayDetails,
    "Name": name_1.Name,
    "OpenInvoiceDetails": openInvoiceDetails_1.OpenInvoiceDetails,
    "PayPalDetails": payPalDetails_1.PayPalDetails,
    "PayUUpiDetails": payUUpiDetails_1.PayUUpiDetails,
    "PayWithGoogleDetails": payWithGoogleDetails_1.PayWithGoogleDetails,
    "PaymentAmountUpdateResource": paymentAmountUpdateResource_1.PaymentAmountUpdateResource,
    "PaymentCancelResource": paymentCancelResource_1.PaymentCancelResource,
    "PaymentCaptureResource": paymentCaptureResource_1.PaymentCaptureResource,
    "PaymentCompletionDetails": paymentCompletionDetails_1.PaymentCompletionDetails,
    "PaymentDetails": paymentDetails_1.PaymentDetails,
    "PaymentDetailsResponse": paymentDetailsResponse_1.PaymentDetailsResponse,
    "PaymentLinkResource": paymentLinkResource_1.PaymentLinkResource,
    "PaymentMethod": paymentMethod_1.PaymentMethod,
    "PaymentMethodGroup": paymentMethodGroup_1.PaymentMethodGroup,
    "PaymentMethodsRequest": paymentMethodsRequest_1.PaymentMethodsRequest,
    "PaymentMethodsResponse": paymentMethodsResponse_1.PaymentMethodsResponse,
    "PaymentRefundResource": paymentRefundResource_1.PaymentRefundResource,
    "PaymentRequest": paymentRequest_1.PaymentRequest,
    "PaymentResponse": paymentResponse_1.PaymentResponse,
    "PaymentReversalResource": paymentReversalResource_1.PaymentReversalResource,
    "PaymentSetupRequest": paymentSetupRequest_1.PaymentSetupRequest,
    "PaymentSetupResponse": paymentSetupResponse_1.PaymentSetupResponse,
    "PaymentVerificationRequest": paymentVerificationRequest_1.PaymentVerificationRequest,
    "PaymentVerificationResponse": paymentVerificationResponse_1.PaymentVerificationResponse,
    "QiwiWalletDetails": qiwiWalletDetails_1.QiwiWalletDetails,
    "RatepayDetails": ratepayDetails_1.RatepayDetails,
    "Recurring": recurring_1.Recurring,
    "RecurringDetail": recurringDetail_1.RecurringDetail,
    "Redirect": redirect_1.Redirect,
    "ResponseAdditionalData3DSecure": responseAdditionalData3DSecure_1.ResponseAdditionalData3DSecure,
    "ResponseAdditionalDataBillingAddress": responseAdditionalDataBillingAddress_1.ResponseAdditionalDataBillingAddress,
    "ResponseAdditionalDataCard": responseAdditionalDataCard_1.ResponseAdditionalDataCard,
    "ResponseAdditionalDataCommon": responseAdditionalDataCommon_1.ResponseAdditionalDataCommon,
    "ResponseAdditionalDataDeliveryAddress": responseAdditionalDataDeliveryAddress_1.ResponseAdditionalDataDeliveryAddress,
    "ResponseAdditionalDataInstallments": responseAdditionalDataInstallments_1.ResponseAdditionalDataInstallments,
    "ResponseAdditionalDataNetworkTokens": responseAdditionalDataNetworkTokens_1.ResponseAdditionalDataNetworkTokens,
    "ResponseAdditionalDataOpi": responseAdditionalDataOpi_1.ResponseAdditionalDataOpi,
    "ResponseAdditionalDataPayPal": responseAdditionalDataPayPal_1.ResponseAdditionalDataPayPal,
    "ResponseAdditionalDataSepa": responseAdditionalDataSepa_1.ResponseAdditionalDataSepa,
    "RiskData": riskData_1.RiskData,
    "SDKEphemPubKey": sDKEphemPubKey_1.SDKEphemPubKey,
    "SamsungPayDetails": samsungPayDetails_1.SamsungPayDetails,
    "SepaDirectDebitDetails": sepaDirectDebitDetails_1.SepaDirectDebitDetails,
    "ServiceError": serviceError_1.ServiceError,
    "ServiceError2": serviceError2_1.ServiceError2,
    "ShopperInput": shopperInput_1.ShopperInput,
    "ShopperInteractionDevice": shopperInteractionDevice_1.ShopperInteractionDevice,
    "Split": split_1.Split,
    "SplitAmount": splitAmount_1.SplitAmount,
    "StandalonePaymentCancelResource": standalonePaymentCancelResource_1.StandalonePaymentCancelResource,
    "StoredDetails": storedDetails_1.StoredDetails,
    "StoredPaymentMethod": storedPaymentMethod_1.StoredPaymentMethod,
    "StoredPaymentMethodDetails": storedPaymentMethodDetails_1.StoredPaymentMethodDetails,
    "SubInputDetail": subInputDetail_1.SubInputDetail,
    "ThreeDS2RequestData": threeDS2RequestData_1.ThreeDS2RequestData,
    "ThreeDS2ResponseData": threeDS2ResponseData_1.ThreeDS2ResponseData,
    "ThreeDS2Result": threeDS2Result_1.ThreeDS2Result,
    "ThreeDSecureData": threeDSecureData_1.ThreeDSecureData,
    "UpdatePaymentLinkRequest": updatePaymentLinkRequest_1.UpdatePaymentLinkRequest,
    "UpiDetails": upiDetails_1.UpiDetails,
    "VippsDetails": vippsDetails_1.VippsDetails,
    "VisaCheckoutDetails": visaCheckoutDetails_1.VisaCheckoutDetails,
    "WeChatPayDetails": weChatPayDetails_1.WeChatPayDetails,
    "WeChatPayMiniProgramDetails": weChatPayMiniProgramDetails_1.WeChatPayMiniProgramDetails,
    "ZipDetails": zipDetails_1.ZipDetails,
};
class ObjectSerializer {
    static findCorrectType(data, expectedType) {
        if (data == undefined) {
            return expectedType;
        }
        else if (primitives.indexOf(expectedType.toLowerCase()) !== -1) {
            return expectedType;
        }
        else if (expectedType === "Date") {
            return expectedType;
        }
        else {
            if (enumsMap[expectedType]) {
                return expectedType;
            }
            if (!typeMap[expectedType]) {
                return expectedType; // w/e we don't know the type
            }
            // Check the discriminator
            let discriminatorProperty = typeMap[expectedType].discriminator;
            if (discriminatorProperty == null) {
                return expectedType; // the type does not have a discriminator. use it.
            }
            else {
                if (data[discriminatorProperty]) {
                    var discriminatorType = data[discriminatorProperty];
                    if (typeMap[discriminatorType]) {
                        return discriminatorType; // use the type given in the discriminator
                    }
                    else {
                        return expectedType; // discriminator did not map to a type
                    }
                }
                else {
                    return expectedType; // discriminator was not present (or an empty string)
                }
            }
        }
    }
    static serialize(data, type) {
        if (data == undefined) {
            return data;
        }
        else if (primitives.indexOf(type.toLowerCase()) !== -1) {
            return data;
        }
        else if (type.lastIndexOf("Array<", 0) === 0) { // string.startsWith pre es6
            let subType = type.replace("Array<", ""); // Array<Type> => Type>
            subType = subType.substring(0, subType.length - 1); // Type> => Type
            let transformedData = [];
            for (let index = 0; index < data.length; index++) {
                let datum = data[index];
                transformedData.push(ObjectSerializer.serialize(datum, subType));
            }
            return transformedData;
        }
        else if (type === "Date") {
            return data.toISOString();
        }
        else {
            if (enumsMap[type]) {
                return data;
            }
            if (!typeMap[type]) { // in case we dont know the type
                return data;
            }
            // Get the actual type of this object
            type = this.findCorrectType(data, type);
            // get the map for the correct type.
            let attributeTypes = typeMap[type].getAttributeTypeMap();
            let instance = {};
            for (let index = 0; index < attributeTypes.length; index++) {
                let attributeType = attributeTypes[index];
                instance[attributeType.baseName] = ObjectSerializer.serialize(data[attributeType.name], attributeType.type);
            }
            return instance;
        }
    }
    static deserialize(data, type) {
        // polymorphism may change the actual type.
        type = ObjectSerializer.findCorrectType(data, type);
        if (data == undefined) {
            return data;
        }
        else if (primitives.indexOf(type.toLowerCase()) !== -1) {
            return data;
        }
        else if (type.lastIndexOf("Array<", 0) === 0) { // string.startsWith pre es6
            let subType = type.replace("Array<", ""); // Array<Type> => Type>
            subType = subType.substring(0, subType.length - 1); // Type> => Type
            let transformedData = [];
            for (let index = 0; index < data.length; index++) {
                let datum = data[index];
                transformedData.push(ObjectSerializer.deserialize(datum, subType));
            }
            return transformedData;
        }
        else if (type === "Date") {
            return new Date(data);
        }
        else {
            if (enumsMap[type]) { // is Enum
                return data;
            }
            if (!typeMap[type]) { // dont know the type
                return data;
            }
            let instance = new typeMap[type]();
            let attributeTypes = typeMap[type].getAttributeTypeMap();
            for (let index = 0; index < attributeTypes.length; index++) {
                let attributeType = attributeTypes[index];
                instance[attributeType.name] = ObjectSerializer.deserialize(data[attributeType.baseName], attributeType.type);
            }
            return instance;
        }
    }
}
exports.ObjectSerializer = ObjectSerializer;
//# sourceMappingURL=models.js.map