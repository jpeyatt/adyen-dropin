"use strict";
/**
 * Adyen for Platforms: Account API
 * The Account API provides endpoints for managing account-related entities on your platform. These related entities include account holders, accounts, bank accounts, shareholders, and KYC-related documents. The management operations include actions such as creation, retrieval, updating, and deletion of them.  For more information, refer to our [documentation](https://docs.adyen.com/platforms). ## Authentication To connect to the Account API, you must use basic authentication credentials of your web service user. If you don\'t have one, contact the [Adyen Support Team](https://support.adyen.com/hc/en-us/requests/new). Then use its credentials to authenticate your request, for example:  ``` curl -U \"ws@MarketPlace.YourMarketPlace\":\"YourWsPassword\" \\ -H \"Content-Type: application/json\" \\ ... ``` Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Account API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://cal-test.adyen.com/cal/services/Account/v6/createAccountHolder ```
 *
 * The version of the OpenAPI document: 6
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateAccountRequest = void 0;
class CreateAccountRequest {
    static getAttributeTypeMap() {
        return CreateAccountRequest.attributeTypeMap;
    }
}
exports.CreateAccountRequest = CreateAccountRequest;
CreateAccountRequest.discriminator = undefined;
CreateAccountRequest.attributeTypeMap = [
    {
        "name": "accountHolderCode",
        "baseName": "accountHolderCode",
        "type": "string"
    },
    {
        "name": "bankAccountUUID",
        "baseName": "bankAccountUUID",
        "type": "string"
    },
    {
        "name": "description",
        "baseName": "description",
        "type": "string"
    },
    {
        "name": "metadata",
        "baseName": "metadata",
        "type": "{ [key: string]: string; }"
    },
    {
        "name": "payoutMethodCode",
        "baseName": "payoutMethodCode",
        "type": "string"
    },
    {
        "name": "payoutSchedule",
        "baseName": "payoutSchedule",
        "type": "CreateAccountRequest.PayoutScheduleEnum"
    },
    {
        "name": "payoutScheduleReason",
        "baseName": "payoutScheduleReason",
        "type": "string"
    },
    {
        "name": "payoutSpeed",
        "baseName": "payoutSpeed",
        "type": "CreateAccountRequest.PayoutSpeedEnum"
    }
];
(function (CreateAccountRequest) {
    let PayoutScheduleEnum;
    (function (PayoutScheduleEnum) {
        PayoutScheduleEnum[PayoutScheduleEnum["BiweeklyOn1StAnd15ThAtMidnight"] = 'BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT'] = "BiweeklyOn1StAnd15ThAtMidnight";
        PayoutScheduleEnum[PayoutScheduleEnum["BiweeklyOn1StAnd15ThAtNoon"] = 'BIWEEKLY_ON_1ST_AND_15TH_AT_NOON'] = "BiweeklyOn1StAnd15ThAtNoon";
        PayoutScheduleEnum[PayoutScheduleEnum["Daily"] = 'DAILY'] = "Daily";
        PayoutScheduleEnum[PayoutScheduleEnum["Daily6Pm"] = 'DAILY_6PM'] = "Daily6Pm";
        PayoutScheduleEnum[PayoutScheduleEnum["DailyAu"] = 'DAILY_AU'] = "DailyAu";
        PayoutScheduleEnum[PayoutScheduleEnum["DailyEu"] = 'DAILY_EU'] = "DailyEu";
        PayoutScheduleEnum[PayoutScheduleEnum["DailySg"] = 'DAILY_SG'] = "DailySg";
        PayoutScheduleEnum[PayoutScheduleEnum["DailyUs"] = 'DAILY_US'] = "DailyUs";
        PayoutScheduleEnum[PayoutScheduleEnum["Default"] = 'DEFAULT'] = "Default";
        PayoutScheduleEnum[PayoutScheduleEnum["Every6HoursFromMidnight"] = 'EVERY_6_HOURS_FROM_MIDNIGHT'] = "Every6HoursFromMidnight";
        PayoutScheduleEnum[PayoutScheduleEnum["Hold"] = 'HOLD'] = "Hold";
        PayoutScheduleEnum[PayoutScheduleEnum["Monthly"] = 'MONTHLY'] = "Monthly";
        PayoutScheduleEnum[PayoutScheduleEnum["MonthlyOn15ThAtMidnight"] = 'MONTHLY_ON_15TH_AT_MIDNIGHT'] = "MonthlyOn15ThAtMidnight";
        PayoutScheduleEnum[PayoutScheduleEnum["Weekly"] = 'WEEKLY'] = "Weekly";
        PayoutScheduleEnum[PayoutScheduleEnum["WeeklyOnTueFriMidnight"] = 'WEEKLY_ON_TUE_FRI_MIDNIGHT'] = "WeeklyOnTueFriMidnight";
        PayoutScheduleEnum[PayoutScheduleEnum["Yearly"] = 'YEARLY'] = "Yearly";
    })(PayoutScheduleEnum = CreateAccountRequest.PayoutScheduleEnum || (CreateAccountRequest.PayoutScheduleEnum = {}));
    let PayoutSpeedEnum;
    (function (PayoutSpeedEnum) {
        PayoutSpeedEnum[PayoutSpeedEnum["Instant"] = 'INSTANT'] = "Instant";
        PayoutSpeedEnum[PayoutSpeedEnum["SameDay"] = 'SAME_DAY'] = "SameDay";
        PayoutSpeedEnum[PayoutSpeedEnum["Standard"] = 'STANDARD'] = "Standard";
    })(PayoutSpeedEnum = CreateAccountRequest.PayoutSpeedEnum || (CreateAccountRequest.PayoutSpeedEnum = {}));
})(CreateAccountRequest = exports.CreateAccountRequest || (exports.CreateAccountRequest = {}));
//# sourceMappingURL=createAccountRequest.js.map