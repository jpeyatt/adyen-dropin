"use strict";
/**
 * Adyen for Platforms: Account API
 * The Account API provides endpoints for managing account-related entities on your platform. These related entities include account holders, accounts, bank accounts, shareholders, and KYC-related documents. The management operations include actions such as creation, retrieval, updating, and deletion of them.  For more information, refer to our [documentation](https://docs.adyen.com/platforms). ## Authentication To connect to the Account API, you must use basic authentication credentials of your web service user. If you don\'t have one, contact the [Adyen Support Team](https://support.adyen.com/hc/en-us/requests/new). Then use its credentials to authenticate your request, for example:  ``` curl -U \"ws@MarketPlace.YourMarketPlace\":\"YourWsPassword\" \\ -H \"Content-Type: application/json\" \\ ... ``` Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Account API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://cal-test.adyen.com/cal/services/Account/v6/createAccountHolder ```
 *
 * The version of the OpenAPI document: 6
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LegalArrangementEntityDetail = void 0;
class LegalArrangementEntityDetail {
    static getAttributeTypeMap() {
        return LegalArrangementEntityDetail.attributeTypeMap;
    }
}
exports.LegalArrangementEntityDetail = LegalArrangementEntityDetail;
LegalArrangementEntityDetail.discriminator = undefined;
LegalArrangementEntityDetail.attributeTypeMap = [
    {
        "name": "address",
        "baseName": "address",
        "type": "ViasAddress"
    },
    {
        "name": "businessDetails",
        "baseName": "businessDetails",
        "type": "BusinessDetails"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "fullPhoneNumber",
        "baseName": "fullPhoneNumber",
        "type": "string"
    },
    {
        "name": "individualDetails",
        "baseName": "individualDetails",
        "type": "IndividualDetails"
    },
    {
        "name": "legalArrangementEntityCode",
        "baseName": "legalArrangementEntityCode",
        "type": "string"
    },
    {
        "name": "legalArrangementEntityReference",
        "baseName": "legalArrangementEntityReference",
        "type": "string"
    },
    {
        "name": "legalArrangementMember",
        "baseName": "legalArrangementMember",
        "type": "LegalArrangementEntityDetail.LegalArrangementMemberEnum"
    },
    {
        "name": "legalEntityType",
        "baseName": "legalEntityType",
        "type": "LegalArrangementEntityDetail.LegalEntityTypeEnum"
    },
    {
        "name": "phoneNumber",
        "baseName": "phoneNumber",
        "type": "ViasPhoneNumber"
    },
    {
        "name": "webAddress",
        "baseName": "webAddress",
        "type": "string"
    }
];
(function (LegalArrangementEntityDetail) {
    let LegalArrangementMemberEnum;
    (function (LegalArrangementMemberEnum) {
        LegalArrangementMemberEnum[LegalArrangementMemberEnum["Associate"] = 'Associate'] = "Associate";
        LegalArrangementMemberEnum[LegalArrangementMemberEnum["Beneficiary"] = 'Beneficiary'] = "Beneficiary";
        LegalArrangementMemberEnum[LegalArrangementMemberEnum["Chairman"] = 'Chairman'] = "Chairman";
        LegalArrangementMemberEnum[LegalArrangementMemberEnum["Partner"] = 'Partner'] = "Partner";
        LegalArrangementMemberEnum[LegalArrangementMemberEnum["Protector"] = 'Protector'] = "Protector";
        LegalArrangementMemberEnum[LegalArrangementMemberEnum["Secretary"] = 'Secretary'] = "Secretary";
        LegalArrangementMemberEnum[LegalArrangementMemberEnum["Settlor"] = 'Settlor'] = "Settlor";
        LegalArrangementMemberEnum[LegalArrangementMemberEnum["Shareholder"] = 'Shareholder'] = "Shareholder";
        LegalArrangementMemberEnum[LegalArrangementMemberEnum["Treasurer"] = 'Treasurer'] = "Treasurer";
        LegalArrangementMemberEnum[LegalArrangementMemberEnum["Trustee"] = 'Trustee'] = "Trustee";
    })(LegalArrangementMemberEnum = LegalArrangementEntityDetail.LegalArrangementMemberEnum || (LegalArrangementEntityDetail.LegalArrangementMemberEnum = {}));
    let LegalEntityTypeEnum;
    (function (LegalEntityTypeEnum) {
        LegalEntityTypeEnum[LegalEntityTypeEnum["Business"] = 'Business'] = "Business";
        LegalEntityTypeEnum[LegalEntityTypeEnum["Individual"] = 'Individual'] = "Individual";
        LegalEntityTypeEnum[LegalEntityTypeEnum["NonProfit"] = 'NonProfit'] = "NonProfit";
        LegalEntityTypeEnum[LegalEntityTypeEnum["Partnership"] = 'Partnership'] = "Partnership";
        LegalEntityTypeEnum[LegalEntityTypeEnum["PublicCompany"] = 'PublicCompany'] = "PublicCompany";
    })(LegalEntityTypeEnum = LegalArrangementEntityDetail.LegalEntityTypeEnum || (LegalArrangementEntityDetail.LegalEntityTypeEnum = {}));
})(LegalArrangementEntityDetail = exports.LegalArrangementEntityDetail || (exports.LegalArrangementEntityDetail = {}));
//# sourceMappingURL=legalArrangementEntityDetail.js.map