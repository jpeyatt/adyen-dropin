"use strict";
/**
 * Adyen for Platforms: Account API
 * The Account API provides endpoints for managing account-related entities on your platform. These related entities include account holders, accounts, bank accounts, shareholders, and KYC-related documents. The management operations include actions such as creation, retrieval, updating, and deletion of them.  For more information, refer to our [documentation](https://docs.adyen.com/platforms). ## Authentication To connect to the Account API, you must use basic authentication credentials of your web service user. If you don\'t have one, contact the [Adyen Support Team](https://support.adyen.com/hc/en-us/requests/new). Then use its credentials to authenticate your request, for example:  ``` curl -U \"ws@MarketPlace.YourMarketPlace\":\"YourWsPassword\" \\ -H \"Content-Type: application/json\" \\ ... ``` Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Account API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://cal-test.adyen.com/cal/services/Account/v6/createAccountHolder ```
 *
 * The version of the OpenAPI document: 6
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateAccountHolderRequest = void 0;
class CreateAccountHolderRequest {
    static getAttributeTypeMap() {
        return CreateAccountHolderRequest.attributeTypeMap;
    }
}
exports.CreateAccountHolderRequest = CreateAccountHolderRequest;
CreateAccountHolderRequest.discriminator = undefined;
CreateAccountHolderRequest.attributeTypeMap = [
    {
        "name": "accountHolderCode",
        "baseName": "accountHolderCode",
        "type": "string"
    },
    {
        "name": "accountHolderDetails",
        "baseName": "accountHolderDetails",
        "type": "AccountHolderDetails"
    },
    {
        "name": "createDefaultAccount",
        "baseName": "createDefaultAccount",
        "type": "boolean"
    },
    {
        "name": "description",
        "baseName": "description",
        "type": "string"
    },
    {
        "name": "legalEntity",
        "baseName": "legalEntity",
        "type": "CreateAccountHolderRequest.LegalEntityEnum"
    },
    {
        "name": "primaryCurrency",
        "baseName": "primaryCurrency",
        "type": "string"
    },
    {
        "name": "processingTier",
        "baseName": "processingTier",
        "type": "number"
    },
    {
        "name": "verificationProfile",
        "baseName": "verificationProfile",
        "type": "string"
    }
];
(function (CreateAccountHolderRequest) {
    let LegalEntityEnum;
    (function (LegalEntityEnum) {
        LegalEntityEnum[LegalEntityEnum["Business"] = 'Business'] = "Business";
        LegalEntityEnum[LegalEntityEnum["Individual"] = 'Individual'] = "Individual";
        LegalEntityEnum[LegalEntityEnum["NonProfit"] = 'NonProfit'] = "NonProfit";
        LegalEntityEnum[LegalEntityEnum["Partnership"] = 'Partnership'] = "Partnership";
        LegalEntityEnum[LegalEntityEnum["PublicCompany"] = 'PublicCompany'] = "PublicCompany";
    })(LegalEntityEnum = CreateAccountHolderRequest.LegalEntityEnum || (CreateAccountHolderRequest.LegalEntityEnum = {}));
})(CreateAccountHolderRequest = exports.CreateAccountHolderRequest || (exports.CreateAccountHolderRequest = {}));
//# sourceMappingURL=createAccountHolderRequest.js.map