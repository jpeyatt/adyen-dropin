{"ast":null,"code":"import { makePayment, showFinalResult, makeDetailsCall, getPaymentMethods } from \"./handlers\";\n\nconst getConfig = async () => {\n  return {\n    paymentMethodsResponse: await getPaymentMethods(),\n    // The `/paymentMethods` response from the server.\n    clientKey: \"AQEyhmfxJovJahVLw0m/n3Q5qf3VaY9UCJ14XWZE03G/k2NFik9p9T7rzavcv613u115aY0QwV1bDb7kfNy1WIxIIkxgBw==-Yc6vfYhvUE1THWOq164IoV4QOvodoKYYfna3rZkU8zg=-Q&3rRTZu&Ttjxwz#\",\n    // Web Drop-in versions before 3.10.1 use originKey instead of clientKey.\n    locale: \"en-US\",\n    environment: \"test\",\n    onSubmit: (state, dropin) => {\n      // Global configuration for onSubmit\n      // Your function calling your server to make the `/payments` request\n      makePayment(state.data).then(response => {\n        if (response.action) {\n          // Drop-in handles the action object from the /payments response\n          dropin.handleAction(response.action);\n        } else {\n          // Your function to show the final result to the shopper\n          showFinalResult(response);\n        }\n      }).catch(error => {\n        throw Error(error);\n      });\n    },\n    onAdditionalDetails: (state, dropin) => {\n      // Your function calling your server to make a `/payments/details` request\n      makeDetailsCall(state.data).then(response => {\n        if (response.action) {\n          // Drop-in handles the action object from the /payments response\n          dropin.handleAction(response.action);\n        } else {\n          // Your function to show the final result to the shopper\n          showFinalResult(response);\n        }\n      }).catch(error => {\n        throw Error(error);\n      });\n    } //   paymentMethodsConfiguration: {\n    //     card: { // Example optional configuration for Cards\n    //       hasHolderName: true,\n    //       holderNameRequired: true,\n    //       enableStoreDetails: true,\n    //       hideCVC: false, // Change this to true to hide the CVC field for stored cards\n    //       name: 'Credit or debit card',\n    //       onSubmit: () => { }, // onSubmit configuration for card payments. Overrides the global configuration.\n    //     }\n    //   }\n\n  };\n};\n\nexport default getConfig;","map":{"version":3,"sources":["/Users/j.peyatt/Desktop/adyen/src/services/utils/config.js"],"names":["makePayment","showFinalResult","makeDetailsCall","getPaymentMethods","getConfig","paymentMethodsResponse","clientKey","locale","environment","onSubmit","state","dropin","data","then","response","action","handleAction","catch","error","Error","onAdditionalDetails"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,iBAAxD,QAAiF,YAAjF;;AAEA,MAAMC,SAAS,GAAG,YAAY;AAC1B,SAAO;AACLC,IAAAA,sBAAsB,EAAE,MAAMF,iBAAiB,EAD1C;AAC8C;AACnDG,IAAAA,SAAS,EAAE,gKAFN;AAEwK;AAC7KC,IAAAA,MAAM,EAAE,OAHH;AAILC,IAAAA,WAAW,EAAE,MAJR;AAKLC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3B;AACA;AACAX,MAAAA,WAAW,CAACU,KAAK,CAACE,IAAP,CAAX,CACGC,IADH,CACQC,QAAQ,IAAI;AAChB,YAAIA,QAAQ,CAACC,MAAb,EAAqB;AACnB;AACAJ,UAAAA,MAAM,CAACK,YAAP,CAAoBF,QAAQ,CAACC,MAA7B;AACD,SAHD,MAGO;AACL;AACAd,UAAAA,eAAe,CAACa,QAAD,CAAf;AACD;AACF,OATH,EAUGG,KAVH,CAUSC,KAAK,IAAI;AACd,cAAMC,KAAK,CAACD,KAAD,CAAX;AACD,OAZH;AAaD,KArBI;AAsBLE,IAAAA,mBAAmB,EAAE,CAACV,KAAD,EAAQC,MAAR,KAAmB;AACtC;AACAT,MAAAA,eAAe,CAACQ,KAAK,CAACE,IAAP,CAAf,CACGC,IADH,CACQC,QAAQ,IAAI;AAChB,YAAIA,QAAQ,CAACC,MAAb,EAAqB;AACnB;AACAJ,UAAAA,MAAM,CAACK,YAAP,CAAoBF,QAAQ,CAACC,MAA7B;AACD,SAHD,MAGO;AACL;AACAd,UAAAA,eAAe,CAACa,QAAD,CAAf;AACD;AACF,OATH,EAUGG,KAVH,CAUSC,KAAK,IAAI;AACd,cAAMC,KAAK,CAACD,KAAD,CAAX;AACD,OAZH;AAaD,KArCI,CAsCP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA/CO,GAAP;AAiDD,CAlDH;;AAoDE,eAAed,SAAf","sourcesContent":["import { makePayment, showFinalResult, makeDetailsCall, getPaymentMethods } from \"./handlers\";\n\nconst getConfig = async () => {\n    return {\n      paymentMethodsResponse: await getPaymentMethods(), // The `/paymentMethods` response from the server.\n      clientKey: \"AQEyhmfxJovJahVLw0m/n3Q5qf3VaY9UCJ14XWZE03G/k2NFik9p9T7rzavcv613u115aY0QwV1bDb7kfNy1WIxIIkxgBw==-Yc6vfYhvUE1THWOq164IoV4QOvodoKYYfna3rZkU8zg=-Q&3rRTZu&Ttjxwz#\", // Web Drop-in versions before 3.10.1 use originKey instead of clientKey.\n      locale: \"en-US\",\n      environment: \"test\",\n      onSubmit: (state, dropin) => {\n        // Global configuration for onSubmit\n        // Your function calling your server to make the `/payments` request\n        makePayment(state.data)\n          .then(response => {\n            if (response.action) {\n              // Drop-in handles the action object from the /payments response\n              dropin.handleAction(response.action);\n            } else {\n              // Your function to show the final result to the shopper\n              showFinalResult(response);\n            }\n          })\n          .catch(error => {\n            throw Error(error);\n          });\n      },\n      onAdditionalDetails: (state, dropin) => {\n        // Your function calling your server to make a `/payments/details` request\n        makeDetailsCall(state.data)\n          .then(response => {\n            if (response.action) {\n              // Drop-in handles the action object from the /payments response\n              dropin.handleAction(response.action);\n            } else {\n              // Your function to show the final result to the shopper\n              showFinalResult(response);\n            }\n          })\n          .catch(error => {\n            throw Error(error);\n          });\n      },\n    //   paymentMethodsConfiguration: {\n    //     card: { // Example optional configuration for Cards\n    //       hasHolderName: true,\n    //       holderNameRequired: true,\n    //       enableStoreDetails: true,\n    //       hideCVC: false, // Change this to true to hide the CVC field for stored cards\n    //       name: 'Credit or debit card',\n    //       onSubmit: () => { }, // onSubmit configuration for card payments. Overrides the global configuration.\n    //     }\n    //   }\n    };\n  }\n\n  export default getConfig;"]},"metadata":{},"sourceType":"module"}