{"ast":null,"code":"var _jsxFileName = \"/Users/j.peyatt/Desktop/adyen/src/App.js\";\nimport AdyenCheckout from '@adyen/adyen-web';\nimport '@adyen/adyen-web/dist/adyen.css';\nimport { useEffect } from 'react';\nimport { config } from 'yargs'; // const getPaymentMethods = () => {\n//   axios.post('http://localhost:3001/paymentMethods', {\n//     countryCode: 'NL',\n//     shopperLocale: 'nl-NL',\n//     currency: 'EUR',\n//     value: 1000,\n//     channel: 'Web'\n//   });\n// };\n// const makePayment = () => {\n//   axios.post('http://localhost:3001/payments', {\n//     returnUrl: 'http://localhost:/3000',\n//     currency: 'EUR',\n//     value: 1000,\n//     reference: 'TEST-ORDER-123'\n//   });\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst showFinalResult = () => {};\n\nconst makeDetailsCall = () => {}; // const getConfig = () => {\n//   return {\n//     paymentMethodsResponse: getPaymentMethods, // The `/paymentMethods` response from the server.\n//     clientKey: process.env.ADYEN_APIKEY, // Web Drop-in versions before 3.10.1 use originKey instead of clientKey.\n//     locale: \"en-US\",\n//     environment: \"test\",\n//     onSubmit: (state, dropin) => {\n//       // Global configuration for onSubmit\n//       // Your function calling your server to make the `/payments` request\n//       makePayment(state.data)\n//         .then(response => {\n//           if (response.action) {\n//             // Drop-in handles the action object from the /payments response\n//             dropin.handleAction(response.action);\n//           } else {\n//             // Your function to show the final result to the shopper\n//             showFinalResult(response);\n//           }\n//         })\n//         .catch(error => {\n//           throw Error(error);\n//         });\n//     },\n//     onAdditionalDetails: (state, dropin) => {\n//       // Your function calling your server to make a `/payments/details` request\n//       makeDetailsCall(state.data)\n//         .then(response => {\n//           if (response.action) {\n//             // Drop-in handles the action object from the /payments response\n//             dropin.handleAction(response.action);\n//           } else {\n//             // Your function to show the final result to the shopper\n//             showFinalResult(response);\n//           }\n//         })\n//         .catch(error => {\n//           throw Error(error);\n//         });\n//     },\n//     paymentMethodsConfiguration: {\n//       card: { // Example optional configuration for Cards\n//         hasHolderName: true,\n//         holderNameRequired: true,\n//         enableStoreDetails: true,\n//         hideCVC: false, // Change this to true to hide the CVC field for stored cards\n//         name: 'Credit or debit card',\n//         onSubmit: () => { }, // onSubmit configuration for card payments. Overrides the global configuration.\n//       }\n//     }\n//   };\n// }\n\n\nfunction App() {\n  //   const configuration = getConfig();\n  //   useEffect(() => {\n  //     const checkout = new AdyenCheckout(configuration);\n  //     checkout\n  //       .create('dropin', {\n  //         // Starting from version 4.0.0, Drop-in configuration only accepts props related to itself and cannot contain generic configuration like the onSubmit event.\n  //         openFirstPaymentMethod: false\n  //       })\n  //       .mount('#dropin-container');\n  //   }, [configuration]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"dropin-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/j.peyatt/Desktop/adyen/src/App.js"],"names":["AdyenCheckout","useEffect","config","showFinalResult","makeDetailsCall","App"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,kBAA1B;AACA,OAAO,iCAAP;AAEA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,OAAvB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,eAAe,GAAG,MAAM,CAE7B,CAFD;;AAIA,MAAMC,eAAe,GAAG,MAAM,CAE7B,CAFD,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASC,GAAT,GAAe;AACf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGE,sBACE;AAAK,IAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KAnBQA,G;AAqBT,eAAeA,GAAf","sourcesContent":["import AdyenCheckout from '@adyen/adyen-web';\nimport '@adyen/adyen-web/dist/adyen.css';\n\nimport { useEffect } from 'react';\nimport { config } from 'yargs';\n\n// const getPaymentMethods = () => {\n//   axios.post('http://localhost:3001/paymentMethods', {\n//     countryCode: 'NL',\n//     shopperLocale: 'nl-NL',\n//     currency: 'EUR',\n//     value: 1000,\n//     channel: 'Web'\n//   });\n// };\n\n// const makePayment = () => {\n//   axios.post('http://localhost:3001/payments', {\n//     returnUrl: 'http://localhost:/3000',\n//     currency: 'EUR',\n//     value: 1000,\n//     reference: 'TEST-ORDER-123'\n//   });\n// };\n\nconst showFinalResult = () => {\n\n};\n\nconst makeDetailsCall = () => {\n\n};\n\n// const getConfig = () => {\n//   return {\n//     paymentMethodsResponse: getPaymentMethods, // The `/paymentMethods` response from the server.\n//     clientKey: process.env.ADYEN_APIKEY, // Web Drop-in versions before 3.10.1 use originKey instead of clientKey.\n//     locale: \"en-US\",\n//     environment: \"test\",\n//     onSubmit: (state, dropin) => {\n//       // Global configuration for onSubmit\n//       // Your function calling your server to make the `/payments` request\n//       makePayment(state.data)\n//         .then(response => {\n//           if (response.action) {\n//             // Drop-in handles the action object from the /payments response\n//             dropin.handleAction(response.action);\n//           } else {\n//             // Your function to show the final result to the shopper\n//             showFinalResult(response);\n//           }\n//         })\n//         .catch(error => {\n//           throw Error(error);\n//         });\n//     },\n//     onAdditionalDetails: (state, dropin) => {\n//       // Your function calling your server to make a `/payments/details` request\n//       makeDetailsCall(state.data)\n//         .then(response => {\n//           if (response.action) {\n//             // Drop-in handles the action object from the /payments response\n//             dropin.handleAction(response.action);\n//           } else {\n//             // Your function to show the final result to the shopper\n//             showFinalResult(response);\n//           }\n//         })\n//         .catch(error => {\n//           throw Error(error);\n//         });\n//     },\n//     paymentMethodsConfiguration: {\n//       card: { // Example optional configuration for Cards\n//         hasHolderName: true,\n//         holderNameRequired: true,\n//         enableStoreDetails: true,\n//         hideCVC: false, // Change this to true to hide the CVC field for stored cards\n//         name: 'Credit or debit card',\n//         onSubmit: () => { }, // onSubmit configuration for card payments. Overrides the global configuration.\n//       }\n//     }\n//   };\n// }\n\n\nfunction App() {\n//   const configuration = getConfig();\n\n//   useEffect(() => {\n//     const checkout = new AdyenCheckout(configuration);\n//     checkout\n//       .create('dropin', {\n//         // Starting from version 4.0.0, Drop-in configuration only accepts props related to itself and cannot contain generic configuration like the onSubmit event.\n//         openFirstPaymentMethod: false\n//       })\n//       .mount('#dropin-container');\n//   }, [configuration]);\n\n\n  return (\n    <div id=\"dropin-container\">\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}