{"ast":null,"code":"var _jsxFileName = \"/Users/j.peyatt/Desktop/adyen/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport getConfig from './services/utils/config';\nimport CheckOut from './components/Checkout';\nimport { makePayment, showFinalResult, makeDetailsCall, getPaymentMethods } from \"./services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [checkoutConfig, setCheckoutConfig] = useState(null);\n\n  const onSubmit = (state, dropin) => {\n    // Global configuration for onSubmit\n    // Your function calling your server to make the `/payments` request\n    makePayment(state.data).then(response => {\n      if (response.action) {\n        // Drop-in handles the action object from the /payments response\n        dropin.handleAction(response.action);\n      } else {\n        // Your function to show the final result to the shopper\n        showFinalResult(response);\n      }\n    }).catch(error => {\n      throw Error(error);\n    });\n  };\n\n  const processPaymentRes = paymentRes => {};\n\n  const onAdditionalDetails = () => {};\n\n  useEffect(() => {\n    getConfig(onSubmit, processPaymentRes, onAdditionalDetails).then(res => {\n      setCheckoutConfig(res);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-wrapper\",\n    children: checkoutConfig ? /*#__PURE__*/_jsxDEV(CheckOut, {\n      config: checkoutConfig\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DbWsitLFJSyuBH5rQYePOOf6Xbk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/j.peyatt/Desktop/adyen/src/App.js"],"names":["useEffect","useState","getConfig","CheckOut","makePayment","showFinalResult","makeDetailsCall","getPaymentMethods","App","checkoutConfig","setCheckoutConfig","onSubmit","state","dropin","data","then","response","action","handleAction","catch","error","Error","processPaymentRes","paymentRes","onAdditionalDetails","res"],"mappings":";;;AACA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,iBAAxD,QAAiF,gBAAjF;;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,IAAD,CAApD;;AAEA,QAAMU,QAAQ,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAClC;AACA;AACAT,IAAAA,WAAW,CAACQ,KAAK,CAACE,IAAP,CAAX,CACGC,IADH,CACQC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,MAAb,EAAqB;AACnB;AACAJ,QAAAA,MAAM,CAACK,YAAP,CAAoBF,QAAQ,CAACC,MAA7B;AACD,OAHD,MAGO;AACL;AACAZ,QAAAA,eAAe,CAACW,QAAD,CAAf;AACD;AACF,KATH,EAUGG,KAVH,CAUSC,KAAK,IAAI;AACd,YAAMC,KAAK,CAACD,KAAD,CAAX;AACD,KAZH;AAaD,GAhBD;;AAkBA,QAAME,iBAAiB,GAAIC,UAAD,IAAgB,CAEzC,CAFD;;AAIA,QAAMC,mBAAmB,GAAG,MAAM,CAEjC,CAFD;;AAIAxB,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,SAAS,CAACS,QAAD,EAAWW,iBAAX,EAA8BE,mBAA9B,CAAT,CAA4DT,IAA5D,CAAiEU,GAAG,IAAI;AACtEf,MAAAA,iBAAiB,CAACe,GAAD,CAAjB;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,cACGhB,cAAc,gBAAG,QAAC,QAAD;AAAU,MAAA,MAAM,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAH,gBAA0C;AAD3D;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAxCQD,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["\nimport './App.css'\nimport { useEffect, useState } from 'react';\nimport getConfig from './services/utils/config';\nimport CheckOut from './components/Checkout';\nimport { makePayment, showFinalResult, makeDetailsCall, getPaymentMethods } from \"./services/api\";\n\n\nfunction App() {\n  const [checkoutConfig, setCheckoutConfig] = useState(null);\n\n  const onSubmit = (state, dropin) => {\n    // Global configuration for onSubmit\n    // Your function calling your server to make the `/payments` request\n    makePayment(state.data)\n      .then(response => {\n        if (response.action) {\n          // Drop-in handles the action object from the /payments response\n          dropin.handleAction(response.action);\n        } else {\n          // Your function to show the final result to the shopper\n          showFinalResult(response);\n        }\n      })\n      .catch(error => {\n        throw Error(error);\n      });\n  };\n\n  const processPaymentRes = (paymentRes) => {\n\n  };\n\n  const onAdditionalDetails = () => {\n\n  };\n\n  useEffect(() => {\n    getConfig(onSubmit, processPaymentRes, onAdditionalDetails).then(res => {\n      setCheckoutConfig(res);\n    });\n  }, []);\n\n  return (\n    <div className=\"app-wrapper\">\n      {checkoutConfig ? <CheckOut config={checkoutConfig} /> : <></>}\n    </div>\n  );\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}