{"ast":null,"code":"var _jsxFileName = \"/Users/j.peyatt/Desktop/adyen/src/App.js\",\n    _s = $RefreshSig$();\n\nimport AdyenCheckout from '@adyen/adyen-web';\nimport '@adyen/adyen-web/dist/adyen.css';\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport { config } from 'yargs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getPaymentMethods = () => {\n  axios.post('http://localhost:3001/paymentMethods', {\n    countryCode: 'NL',\n    shopperLocale: 'nl-NL',\n    currency: 'EUR',\n    value: 1000,\n    channel: 'Web'\n  });\n};\n\nconst makePayment = () => {\n  axios.post('http://localhost:3001/payments', {\n    returnUrl: 'http://localhost:/3000',\n    currency: 'EUR',\n    value: 1000,\n    reference: 'TEST-ORDER-123'\n  });\n};\n\nconst showFinalResult = () => {};\n\nconst makeDetailsCall = () => {};\n\nconst getConfig = () => {\n  return {\n    paymentMethodsResponse: getPaymentMethods,\n    // The `/paymentMethods` response from the server.\n    clientKey: process.env.ADYEN_APIKEY,\n    // Web Drop-in versions before 3.10.1 use originKey instead of clientKey.\n    locale: \"en-US\",\n    environment: \"test\",\n    onSubmit: (state, dropin) => {\n      // Global configuration for onSubmit\n      // Your function calling your server to make the `/payments` request\n      makePayment(state.data).then(response => {\n        if (response.action) {\n          // Drop-in handles the action object from the /payments response\n          dropin.handleAction(response.action);\n        } else {\n          // Your function to show the final result to the shopper\n          showFinalResult(response);\n        }\n      }).catch(error => {\n        throw Error(error);\n      });\n    },\n    onAdditionalDetails: (state, dropin) => {\n      // Your function calling your server to make a `/payments/details` request\n      makeDetailsCall(state.data).then(response => {\n        if (response.action) {\n          // Drop-in handles the action object from the /payments response\n          dropin.handleAction(response.action);\n        } else {\n          // Your function to show the final result to the shopper\n          showFinalResult(response);\n        }\n      }).catch(error => {\n        throw Error(error);\n      });\n    },\n    paymentMethodsConfiguration: {\n      card: {\n        // Example optional configuration for Cards\n        hasHolderName: true,\n        holderNameRequired: true,\n        enableStoreDetails: true,\n        hideCVC: false,\n        // Change this to true to hide the CVC field for stored cards\n        name: 'Credit or debit card',\n        onSubmit: () => {} // onSubmit configuration for card payments. Overrides the global configuration.\n\n      }\n    }\n  };\n};\n\nfunction App() {\n  _s();\n\n  const configuration = getConfig();\n  useEffect(() => {\n    const checkout = new AdyenCheckout(configuration);\n    checkout.create('dropin', {\n      // Starting from version 4.0.0, Drop-in configuration only accepts props related to itself and cannot contain generic configuration like the onSubmit event.\n      openFirstPaymentMethod: false\n    }).mount('#dropin-container');\n  }, [configuration]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"dropin-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/j.peyatt/Desktop/adyen/src/App.js"],"names":["AdyenCheckout","axios","useEffect","config","getPaymentMethods","post","countryCode","shopperLocale","currency","value","channel","makePayment","returnUrl","reference","showFinalResult","makeDetailsCall","getConfig","paymentMethodsResponse","clientKey","process","env","ADYEN_APIKEY","locale","environment","onSubmit","state","dropin","data","then","response","action","handleAction","catch","error","Error","onAdditionalDetails","paymentMethodsConfiguration","card","hasHolderName","holderNameRequired","enableStoreDetails","hideCVC","name","App","configuration","checkout","create","openFirstPaymentMethod","mount"],"mappings":"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","sourcesContent":["import AdyenCheckout from '@adyen/adyen-web';\nimport '@adyen/adyen-web/dist/adyen.css';\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport { config } from 'yargs';\n\nconst getPaymentMethods = () => {\n  axios.post('http://localhost:3001/paymentMethods', {\n    countryCode: 'NL',\n    shopperLocale: 'nl-NL',\n    currency: 'EUR',\n    value: 1000,\n    channel: 'Web'\n  });\n};\n\nconst makePayment = () => {\n  axios.post('http://localhost:3001/payments', {\n    returnUrl: 'http://localhost:/3000',\n    currency: 'EUR',\n    value: 1000,\n    reference: 'TEST-ORDER-123'\n  })\n};\n\nconst showFinalResult = () => {\n\n};\n\nconst makeDetailsCall = () => {\n\n};\n\nconst getConfig = () => {\n  return {\n    paymentMethodsResponse: getPaymentMethods, // The `/paymentMethods` response from the server.\n    clientKey: process.env.ADYEN_APIKEY, // Web Drop-in versions before 3.10.1 use originKey instead of clientKey.\n    locale: \"en-US\",\n    environment: \"test\",\n    onSubmit: (state, dropin) => {\n      // Global configuration for onSubmit\n      // Your function calling your server to make the `/payments` request\n      makePayment(state.data)\n        .then(response => {\n          if (response.action) {\n            // Drop-in handles the action object from the /payments response\n            dropin.handleAction(response.action);\n          } else {\n            // Your function to show the final result to the shopper\n            showFinalResult(response);\n          }\n        })\n        .catch(error => {\n          throw Error(error);\n        });\n    },\n    onAdditionalDetails: (state, dropin) => {\n      // Your function calling your server to make a `/payments/details` request\n      makeDetailsCall(state.data)\n        .then(response => {\n          if (response.action) {\n            // Drop-in handles the action object from the /payments response\n            dropin.handleAction(response.action);\n          } else {\n            // Your function to show the final result to the shopper\n            showFinalResult(response);\n          }\n        })\n        .catch(error => {\n          throw Error(error);\n        });\n    },\n    paymentMethodsConfiguration: {\n      card: { // Example optional configuration for Cards\n        hasHolderName: true,\n        holderNameRequired: true,\n        enableStoreDetails: true,\n        hideCVC: false, // Change this to true to hide the CVC field for stored cards\n        name: 'Credit or debit card',\n        onSubmit: () => { }, // onSubmit configuration for card payments. Overrides the global configuration.\n      }\n    }\n  };\n}\n\n\nfunction App() {\n  const configuration = getConfig();\n\n  useEffect(() => {\n    const checkout = new AdyenCheckout(configuration);\n    checkout\n      .create('dropin', {\n        // Starting from version 4.0.0, Drop-in configuration only accepts props related to itself and cannot contain generic configuration like the onSubmit event.\n        openFirstPaymentMethod: false\n      })\n      .mount('#dropin-container');\n  }, [configuration]);\n\n\n  return (\n    <div id=\"dropin-container\">\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}